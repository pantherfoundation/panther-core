type BusBatchOnboarded @entity(immutable: true) {
    id: Bytes!
    queueId: BigInt! # uint256
    batchRoot: Bytes! # bytes32
    numUtxosInBatch: BigInt! # uint256
    leftLeafIndexInBusTree: BigInt! # uint256
    busTreeNewRoot: Bytes! # bytes32
    busBranchNewRoot: Bytes! # bytes32
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
    from: String!
}

type BusBranchFilled @entity(immutable: true) {
    id: Bytes!
    branchIndex: BigInt! # uint256
    busBranchFinalRoot: Bytes! # bytes32
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
    from: String!
}

type BusQueueOpened @entity(immutable: false) {
    id: String!
    queueId: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
    isOnboarded: Boolean!
    from: String!
}

type BusQueueProcessed @entity(immutable: true) {
    id: Bytes!
    queueId: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
    from: String!
}

type MinerRewarded @entity(immutable: true) {
    id: Bytes!
    miner: Bytes! # address
    reward: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
    from: String!
}

type UtxoBusQueued @entity(immutable: true) {
    id: Bytes!
    utxo: Bytes! # bytes32
    queueId: BigInt! # uint256
    utxoIndexInBatch: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
    from: String!
}

type RewardClaimed @entity(immutable: true) {
    id: Bytes!
    secretHash: Bytes! # bytes32
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
    from: String!
}

type RewardVoucherGenerated @entity(immutable: true) {
    id: Bytes!
    secretHash: Bytes! # bytes32
    prpAmount: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
    from: String!
}

type VoucherTermsUpdated @entity(immutable: true) {
    id: Bytes!
    allowedContract: Bytes! # address
    voucherType: Bytes! # bytes4
    limit: BigInt! # uint64
    amount: BigInt! # uint64
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
    from: String!
}

type FeesAccounted @entity(immutable: true) {
    id: Bytes!
    chargedFeesPerTx_scMiningReward: BigInt! # uint40
    chargedFeesPerTx_scKytFees: BigInt! # uint40
    chargedFeesPerTx_scKycFee: BigInt! # uint40
    chargedFeesPerTx_scPaymasterCompensationInNative: BigInt! # uint40
    chargedFeesPerTx_protocolFee: BigInt! # uint96
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type KycRewardUpdated @entity(immutable: true) {
    id: Bytes!
    newReward: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type MainCircuitIdUpdated @entity(immutable: true) {
    id: Bytes!
    newId: BigInt! # uint160
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type MaxTimeDeltaUpdated @entity(immutable: true) {
    id: Bytes!
    newMaxTimeDelta: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type PrpAccountConversionCircuitIdUpdated @entity(immutable: true) {
    id: Bytes!
    newId: BigInt! # uint160
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type PrpAccountingCircuitIdUpdated @entity(immutable: true) {
    id: Bytes!
    newId: BigInt! # uint160
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type RootUpdated @entity(immutable: true) {
    id: Bytes!
    leafIndex: BigInt! # uint256
    updatedLeaf: Bytes! # bytes32
    updatedRoot: Bytes! # bytes32
    cacheIndex: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type SeenKytMessageHash @entity(immutable: true) {
    id: Bytes!
    kytMessageHash: Bytes! # bytes32
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type TransactionNote @entity(immutable: true) {
    id: Bytes!
    txType: Int! # uint16
    content: Bytes! # bytes
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type VaultAssetUnlockerUpdated @entity(immutable: true) {
    id: Bytes!
    newAssetUnlocker: Bytes! # address
    status: Boolean! # bool
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type ZAccountRegistrationCircuitIdUpdated @entity(immutable: true) {
    id: Bytes!
    newId: BigInt! # uint160
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type TaxiRootUpdated @entity(immutable: true) {
    id: Bytes!
    updatedRoot: Bytes! # bytes32
    numLeaves: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type TaxiSubtreeRootUpdated @entity(immutable: true) {
    id: Bytes!
    subtreeRoot: Bytes! # bytes32
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type TaxiUtxoAdded @entity(immutable: true) {
    id: Bytes!
    utxo: Bytes! # bytes32
    totalUtxoInsertions: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type BlacklistForMasterEoaUpdated @entity(immutable: true) {
    id: Bytes!
    masterEoa: Bytes! # address
    isBlackListed: Boolean! # bool
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type BlacklistForPubRootSpendingKeyUpdated @entity(immutable: true) {
    id: Bytes!
    packedPubRootSpendingKey: Bytes! # bytes32
    isBlackListed: Boolean! # bool
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type BlacklistForZAccountIdUpdated @entity(immutable: true) {
    id: Bytes!
    zAccountId: Int! # uint24
    isBlackListed: Boolean! # bool
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type ZAccountActivated @entity(immutable: true) {
    id: Bytes!
    ZAccountRegistry_id: Int! # uint24
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type ZAccountRegistered @entity(immutable: true) {
    id: Bytes!
    masterEoa: Bytes! # address
    zAccount__unused: BigInt! # uint184
    zAccount_creationBlock: BigInt! # uint32
    zAccount_id: Int! # uint24
    zAccount_version: Int! # uint8
    zAccount_status: Int! # uint8
    zAccount_pubRootSpendingKey: Bytes! # bytes32
    zAccount_pubReadingKey: Bytes! # bytes32
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}
