specVersion: 0.0.4
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: BusTree
    network: polygon-amoy
    source:
      address: '0x7B2DF31A2B6b03738369c31364893a0C962cD2ab' # Internal
      startBlock: 6876846 # Internal
      # address: '0xf440b054eC70b170a4f473129D37aC860DF4D260' # Public
      # startBlock: 7114634 # Public
      abi: BusTree
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - BusBatchOnboarded
        - BusBranchFilled
        - BusQueueOpened
        - BusQueuePending
        - BusQueueProcessed
        - MinerRewarded
        - UtxoBusQueued
      abis:
        - name: BusTree
          file: ./abis/BusTree.json
      eventHandlers:
        - event: BusBatchOnboarded(indexed uint256,indexed bytes32,uint256,uint256,bytes32,bytes32)
          handler: handleBusBatchOnboarded
        - event: BusBranchFilled(indexed uint256,bytes32)
          handler: handleBusBranchFilled
        - event: BusQueueOpened(uint256)
          handler: handleBusQueueOpened
        - event: BusQueueProcessed(indexed uint256)
          handler: handleBusQueueProcessed
        - event: MinerRewarded(address,uint256)
          handler: handleMinerRewarded
        - event: UtxoBusQueued(indexed bytes32,indexed uint256,uint256)
          handler: handleUtxoBusQueued
      file: ./src/handleBusTreeQueues.ts
  - kind: ethereum
    name: PRPVoucherGrantor
    network: polygon-amoy
    source:
      address: '0xE0e6a6e1a15c2A8B8aA5BF911efbBe3FEC7d6C54' # Internal
      startBlock: 6876846 # Internal
      # address: '0xCc5CEe0d0FCc46AB38583Eb8F6Dc2845a79A69A2' # Public
      # startBlock: 7114698 # Public
      abi: PRPVoucherGrantor
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - RewardClaimed
        - RewardVoucherGenerated
        - VoucherTermsUpdated
      abis:
        - name: PRPVoucherGrantor
          file: ./abis/PRPVoucherGrantor.json
      eventHandlers:
        - event: RewardClaimed(indexed bytes32)
          handler: handleRewardClaimed
        - event: RewardVoucherGenerated(indexed bytes32,uint256)
          handler: handleRewardVoucherGenerated
        - event: VoucherTermsUpdated(address,bytes4,uint64,uint64)
          handler: handleVoucherTermsUpdated
      file: ./src/handlePrpVoucherGrantor.ts
  - kind: ethereum
    name: PantherPoolV1
    network: polygon-amoy
    source:
      address: '0x7A345cfcad0Ca2bC82EFBFcC85A8e211Afc8b05F' # Internal
      startBlock: 6876846 # Internal
      # address: '0x726426F04A4D291B5f19f6675140A799EDB2A0C1' # Public
      # startBlock: 7114685 # Public
      abi: PantherPoolV1
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - FeesAccounted
        - KycRewardUpdated
        - MainCircuitIdUpdated
        - MaxTimeDeltaUpdated
        - PrpAccountConversionCircuitIdUpdated
        - PrpAccountingCircuitIdUpdated
        - RootUpdated
        - SeenKytMessageHash
        - TransactionNote
        - VaultAssetUnlockerUpdated
        - ZAccountRegistrationCircuitIdUpdated
      abis:
        - name: PantherPoolV1
          file: ./abis/PantherPoolV1.json
      eventHandlers:
        - event: FeesAccounted((uint40,uint40,uint40,uint40,uint96))
          handler: handleFeesAccounted
        - event: KycRewardUpdated(uint256)
          handler: handleKycRewardUpdated
        - event: MainCircuitIdUpdated(uint160)
          handler: handleMainCircuitIdUpdated
        - event: MaxTimeDeltaUpdated(uint256)
          handler: handleMaxTimeDeltaUpdated
        - event: PrpAccountConversionCircuitIdUpdated(uint160)
          handler: handlePrpAccountConversionCircuitIdUpdated
        - event: PrpAccountingCircuitIdUpdated(uint160)
          handler: handlePrpAccountingCircuitIdUpdated
        - event: RootUpdated(indexed uint256,bytes32,bytes32,uint256)
          handler: handleRootUpdated
        - event: SeenKytMessageHash(indexed bytes32)
          handler: handleSeenKytMessageHash
        - event: TransactionNote(uint16,bytes)
          handler: handleTransactionNote
        - event: VaultAssetUnlockerUpdated(address,bool)
          handler: handleVaultAssetUnlockerUpdated
        - event: ZAccountRegistrationCircuitIdUpdated(uint160)
          handler: handleZAccountRegistrationCircuitIdUpdated
      file: ./src/handlePoolContract.ts
  - kind: ethereum
    name: TaxiTree
    network: polygon-amoy
    source:
      address: '0x85288bD4B26480841eaB038C1A1993d52947533E' # Internal
      startBlock: 10652712 # Internal
      abi: TaxiTree
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - TaxiRootUpdated
        - TaxiSubtreeRootUpdated
        - TaxiUtxoAdded
      abis:
        - name: TaxiTree
          file: ./abis/TaxiTree.json
      eventHandlers:
        - event: TaxiRootUpdated(bytes32,uint256)
          handler: handleTaxiRootUpdated
        - event: TaxiSubtreeRootUpdated(bytes32)
          handler: handleTaxiSubtreeRootUpdated
        - event: TaxiUtxoAdded(bytes32,uint256)
          handler: handleTaxiUtxoAdded
      file: ./src/handleTaxiTree.ts
  - kind: ethereum
    name: ZAccountRegistry
    network: polygon-amoy
    source:
      abi: ZAccountRegistry
      address: '0xDA080f159b9F866da43bBC9E77eFe75E886fB02B' # Internal
      startBlock: 6869383 # Internal
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - BlacklistForMasterEoaUpdated
        - BlacklistForPubRootSpendingKeyUpdated
        - BlacklistForZAccountIdUpdated
        - ZAccountActivated
        - ZAccountRegistered
      abis:
        - name: ZAccountRegistry
          file: ./abis/ZAccountRegistry.json
      eventHandlers:
        - event: BlacklistForMasterEoaUpdated(address,bool)
          handler: handleBlacklistForMasterEoaUpdated
        - event: BlacklistForPubRootSpendingKeyUpdated(bytes32,bool)
          handler: handleBlacklistForPubRootSpendingKeyUpdated
        - event: BlacklistForZAccountIdUpdated(uint24,bool)
          handler: handleBlacklistForZAccountIdUpdated
        - event: ZAccountActivated(uint24)
          handler: handleZAccountActivated
        - event: ZAccountRegistered(address,(uint184,uint32,uint24,uint8,uint8,bytes32,bytes32))
          handler: handleZAccountRegistered
      file: ./src/handleZAccountRegistry.ts
