// SPDX-License-Identifier: BUSL-1.1
// SPDX-FileCopyrightText: Copyright 2024 Panther Ventures Limited Gibraltar
pragma solidity ^0.8.19;

import { ZERO_VALUE } from "./Constants.sol";

// @notice The binary Merkle tree of two levels populated with zero leaf values
abstract contract TwoLevelZeroTree {
    // @dev Number of levels in a tree excluding the root level
    uint256 internal constant TWO_LEVELS = 2;

    // @param level From 0 for the leaf up to TWO_LEVELS for the root
    function getZeroNodeAtLevel(uint256 level) internal pure returns (bytes32) {
        require(level < TWO_LEVELS + 1, "TZT:E1");

        // Generated by `../../../../lib/binaryMerkleZerosContractGenerator.ts`
        uint256 zeroNode = [
            // Leaf with the zero value
            uint256(ZERO_VALUE),
            // Root of branche containing zero leafs only
            0x232fc5fea3994c77e07e1bab1ec362727b0f71f291c17c34891dd4faf1457bd4,
            // Root of the tree fully populated with zero leafs only
            0x077851cf613fd96280795a3cabc89663f524b1b545a3b1c7c79130b0f7d251c8
        ][level];

        return bytes32(zeroNode);
    }
}
