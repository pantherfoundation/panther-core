// SPDX-License-Identifier: BUSL-1.1
// SPDX-FileCopyrightText: Copyright 2023 Panther Ventures Limited Gibraltar
pragma solidity ^0.8.16;

import { FIELD_SIZE } from "../crypto/SnarkConstants.sol";

// Content is autogenerated by `lib/binaryMerkleZerosContractGenerator.ts`

/**
 * Example:
 * [4]                                       0
 *                                           |
 * [3]                        0--------------------------------1
 *                            |                                |
 * [2]                0---------------1                 2--------------3
 *                    |               |                 |              |
 * [1]            0-------1       2-------3        4-------5       6-------7
 *               / \     / \     / \     / \      / \     / \     / \     / \
 * [0] index:   0   1   2   3   4   5   6   7    8   9   10 11   12 13   14 15
 *
 *   leaf ID:   0...1   2...3   4...5   6...7    8...8   10..11  12..13  14..15
 *
 * - Number in [] is the "level index" that starts from 0 for the leaves level.
 * - Numbers in node/leaf positions are "node/leaf indices" which starts from 0
 *   for the leftmost node/leaf of every level.
 * - Numbers bellow leaves are IDs of leaves.
 */

// @notice The "binary binary tree" populated with zero leaf values
abstract contract BinaryMerkleZeros {
    // @dev Number of levels in a tree excluding the root level
    uint256 internal constant TREE_DEPTH = 16;

    // Number of leaves in a branch with the root on the level 1
    uint256 internal constant TRIAD_SIZE = 2;

    // @dev Leaf zero value
    bytes32 internal constant ZERO_VALUE = 0x00;

    // Merkle root of a tree that contains zeros only
    bytes32 internal constant ZERO_ROOT =
        bytes32(
            uint256(
                0x2a7c7c9b6ce5880b9f6f228d72bf6a575a526f29c66ecceef8b753d38bba7323
            )
        );

    function populateZeros(bytes32[TREE_DEPTH] memory zeros) internal pure {
        zeros[0] = bytes32(uint256(0x0));
        zeros[1] = bytes32(
            uint256(
                0x2098f5fb9e239eab3ceac3f27b81e481dc3124d55ffed523a839ee8446b64864
            )
        );
        zeros[2] = bytes32(
            uint256(
                0x1069673dcdb12263df301a6ff584a7ec261a44cb9dc68df067a4774460b1f1e1
            )
        );
        zeros[3] = bytes32(
            uint256(
                0x18f43331537ee2af2e3d758d50f72106467c6eea50371dd528d57eb2b856d238
            )
        );
        zeros[4] = bytes32(
            uint256(
                0x7f9d837cb17b0d36320ffe93ba52345f1b728571a568265caac97559dbc952a
            )
        );
        zeros[5] = bytes32(
            uint256(
                0x2b94cf5e8746b3f5c9631f4c5df32907a699c58c94b2ad4d7b5cec1639183f55
            )
        );
        zeros[6] = bytes32(
            uint256(
                0x2dee93c5a666459646ea7d22cca9e1bcfed71e6951b953611d11dda32ea09d78
            )
        );
        zeros[7] = bytes32(
            uint256(
                0x78295e5a22b84e982cf601eb639597b8b0515a88cb5ac7fa8a4aabe3c87349d
            )
        );
        zeros[8] = bytes32(
            uint256(
                0x2fa5e5f18f6027a6501bec864564472a616b2e274a41211a444cbe3a99f3cc61
            )
        );
        zeros[9] = bytes32(
            uint256(
                0xe884376d0d8fd21ecb780389e941f66e45e7acce3e228ab3e2156a614fcd747
            )
        );
        zeros[10] = bytes32(
            uint256(
                0x1b7201da72494f1e28717ad1a52eb469f95892f957713533de6175e5da190af2
            )
        );
        zeros[11] = bytes32(
            uint256(
                0x1f8d8822725e36385200c0b201249819a6e6e1e4650808b5bebc6bface7d7636
            )
        );
        zeros[12] = bytes32(
            uint256(
                0x2c5d82f66c914bafb9701589ba8cfcfb6162b0a12acf88a8d0879a0471b5f85a
            )
        );
        zeros[13] = bytes32(
            uint256(
                0x14c54148a0940bb820957f5adf3fa1134ef5c4aaa113f4646458f270e0bfbfd0
            )
        );
        zeros[14] = bytes32(
            uint256(
                0x190d33b12f986f961e10c0ee44d8b9af11be25588cad89d416118e4bf4ebe80c
            )
        );
        zeros[15] = bytes32(
            uint256(
                0x22f98aa9ce704152ac17354914ad73ed1167ae6596af510aa5b3649325e06c92
            )
        );
    }
}
