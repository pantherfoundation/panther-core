{
  "address": "0xcf463713521af5ce31ad18f6914f3706493f10e5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vestingPools",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Vested",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OWNER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VESTING_POOLS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_poolId",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_endTime",
          "type": "uint32"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolId",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releasableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "transferPoolWalletRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x374a9d49542670149f6f7dd98c9f344996ebc492b700afe950fefe9cf5b76651",
  "receipt": {
    "to": null,
    "from": "0xE33b386126149F11cbee6a691d7aFf72dF8dd16d",
    "contractAddress": "0xc6C8C1757a118e2f16E141AB1E1C8bF53198b55C",
    "transactionIndex": 42,
    "gasUsed": "580026",
    "logsBloom": "0x
    "blockHash": "0xe34860953312a7709589c82ba0124da5318fa323a2bc838d697d5d81e9fed841",
    "transactionHash": "0x374a9d49542670149f6f7dd98c9f344996ebc492b700afe950fefe9cf5b76651",
    "logs": [],
    "blockNumber": 10196136,
    "cumulativeGasUsed": "5225288",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8211d4d21e187189C34A59633a691C82dAFDc6a2",
    "0xE33b386126149F11cbee6a691d7aFf72dF8dd16d"
  ],
  "numDeployments": 1,
  "solcInputHash": "4d5ac9e8b890873e77578da1c69de345",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vestingPools\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Vested\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VESTING_POOLS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_poolId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_endTime\",\"type\":\"uint32\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolId\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"transferPoolWalletRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"One of the vesting pools (maybe, the major one) which the VestingPools contract vests $ZKP tokens to is the \\\"Reward Pool\\\" (aka \\\"Protocol Pool\\\"). This contract assumed to have a \\\"pool wallet\\\" role with the VestingPools, and therefore has a privilege to request vesting $ZKPs from the Reward Pool to the \\\"recipient\\\". The \\\"RewardMaster\\\" contract, that distributes tokens to users as rewards, is assumed to be the \\\"recipient\\\". This contract is expected to be replaced. Therefore it allows the owner to transfer the \\\"pool wallet\\\" role to another account.\",\"kind\":\"dev\",\"methods\":{\"initialize(uint8,address,uint32)\":{\"details\":\"Owner only may call, once only This contract address must be set in the VestingPools as the wallet for the pool\"},\"transferPoolWalletRole(address)\":{\"details\":\"Owner only may call, once only\"},\"vestRewards()\":{\"details\":\"{recipient} only may call\"}},\"stateVariables\":{\"endTime\":{\"details\":\"(UNIX) Time when vesting gets disabled\"}},\"title\":\"RewardPool\",\"version\":1},\"userdoc\":{\"events\":{\"Initialized(uint256,address,uint256)\":{\"notice\":\"Emitted on parameters initialized.\"},\"Vested(uint256)\":{\"notice\":\"Emitted on vesting to the {recipient}\"}},\"kind\":\"user\",\"methods\":{\"OWNER()\":{\"notice\":\"The owner who has privileged rights\"},\"VESTING_POOLS()\":{\"notice\":\"Address of the VestingPools instance\"},\"initialize(uint8,address,uint32)\":{\"notice\":\"Sets the {poolId} and the {recipient} to given values\"},\"poolId()\":{\"notice\":\"ID of the pool (in the VestingPools) to vest from\"},\"recipient()\":{\"notice\":\"Address to vest tokens to\"},\"releasableAmount()\":{\"notice\":\"Returns token amount that may be released (vested) now\"},\"transferPoolWalletRole(address)\":{\"notice\":\"Calls VestingPools to transfer 'pool wallet' role to given address\"},\"vestRewards()\":{\"notice\":\"Vests releasable token amount to the {recipient}\"}},\"notice\":\"It vests $ZKP token from the Panther Protocol \\\"Reward Pool\\\".\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardPool.sol\":\"RewardPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/RewardPool.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n// SPDX-FileCopyrightText: Copyright 2021-22 Panther Ventures Limited Gibraltar\\n// solhint-disable var-name-mixedcase\\n// solhint-disable-next-line compiler-fixed, compiler-gt-0_8\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IVestingPools.sol\\\";\\nimport \\\"./interfaces/IRewardPool.sol\\\";\\nimport \\\"./utils/ImmutableOwnable.sol\\\";\\nimport \\\"./utils/Utils.sol\\\";\\n\\n/**\\n * @title RewardPool\\n * @notice It vests $ZKP token from the Panther Protocol \\\"Reward Pool\\\".\\n * @dev One of the vesting pools (maybe, the major one) which the VestingPools\\n * contract vests $ZKP tokens to is the \\\"Reward Pool\\\" (aka \\\"Protocol Pool\\\").\\n * This contract assumed to have a \\\"pool wallet\\\" role with the VestingPools,\\n * and therefore has a privilege to request vesting $ZKPs from the Reward Pool\\n * to the \\\"recipient\\\".\\n * The \\\"RewardMaster\\\" contract, that distributes tokens to users as rewards,\\n * is assumed to be the \\\"recipient\\\".\\n *\\n * This contract is expected to be replaced. Therefore it allows the owner\\n * to transfer the \\\"pool wallet\\\" role to another account.\\n */\\ncontract RewardPool is ImmutableOwnable, Utils, IRewardPool {\\n    /// @notice Address of the VestingPools instance\\n    address public immutable VESTING_POOLS;\\n\\n    /// @notice ID of the pool (in the VestingPools) to vest from\\n    uint8 public poolId;\\n\\n    /// @dev (UNIX) Time when vesting gets disabled\\n    uint32 public endTime;\\n\\n    /// @notice Address to vest tokens to\\n    address public recipient;\\n\\n    constructor(address _vestingPools, address _owner)\\n        ImmutableOwnable(_owner)\\n        nonZeroAddress(_vestingPools)\\n    {\\n        VESTING_POOLS = _vestingPools;\\n    }\\n\\n    /// @inheritdoc IRewardPool\\n    function releasableAmount() external view override returns (uint256) {\\n        if (recipient == address(0)) return 0;\\n        if (timeNow() >= endTime) return 0;\\n\\n        return _releasableAmount();\\n    }\\n\\n    /// @inheritdoc IRewardPool\\n    function vestRewards() external override returns (uint256 amount) {\\n        // revert if unauthorized or recipient not yet set\\n        require(msg.sender == recipient, \\\"RP: unauthorized\\\");\\n        require(timeNow() < endTime, \\\"RP: expired\\\");\\n\\n        amount = _releasableAmount();\\n\\n        if (amount != 0) {\\n            // here and after, no reentrancy guard needed for calls to VESTING_POOLS\\n            IVestingPools(VESTING_POOLS).releaseTo(poolId, recipient, amount);\\n            emit Vested(amount);\\n        }\\n    }\\n\\n    /// @notice Sets the {poolId} and the {recipient} to given values\\n    /// @dev Owner only may call, once only\\n    /// This contract address must be set in the VestingPools as the wallet for the pool\\n    function initialize(\\n        uint8 _poolId,\\n        address _recipient,\\n        uint32 _endTime\\n    ) external onlyOwner nonZeroAddress(_recipient) {\\n        // once only\\n        require(recipient == address(0), \\\"RP: initialized\\\");\\n        // _endTime can't be in the past\\n        require(_endTime > timeNow(), \\\"RP: expired\\\");\\n        // this contract must be registered with the VestingPools\\n        require(\\n            IVestingPools(VESTING_POOLS).getWallet(_poolId) == address(this),\\n            \\\"RP:E7\\\"\\n        );\\n\\n        poolId = _poolId;\\n        recipient = _recipient;\\n        endTime = _endTime;\\n\\n        emit Initialized(_poolId, _recipient, _endTime);\\n    }\\n\\n    /// @notice Calls VestingPools to transfer 'pool wallet' role to given address\\n    /// @dev Owner only may call, once only\\n    function transferPoolWalletRole(address newWallet)\\n        external\\n        onlyOwner\\n        nonZeroAddress(newWallet)\\n    {\\n        IVestingPools(VESTING_POOLS).updatePoolWallet(poolId, newWallet);\\n    }\\n\\n    function _releasableAmount() internal view returns (uint256) {\\n        return IVestingPools(VESTING_POOLS).releasableAmount(poolId);\\n    }\\n\\n    modifier nonZeroAddress(address account) {\\n        require(account != address(0), \\\"RP: zero address\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x3828542cca5163eae8705a22a9d5f19a3e038f69307f12be57be7f65f243fceb\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IRewardPool.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n// SPDX-FileCopyrightText: Copyright 2021-22 Panther Ventures Limited Gibraltar\\npragma solidity ^0.8.0;\\n\\ninterface IRewardPool {\\n    /// @notice Returns token amount that may be released (vested) now\\n    function releasableAmount() external view returns (uint256);\\n\\n    /// @notice Vests releasable token amount to the {recipient}\\n    /// @dev {recipient} only may call\\n    function vestRewards() external returns (uint256 amount);\\n\\n    /// @notice Emitted on vesting to the {recipient}\\n    event Vested(uint256 amount);\\n\\n    /// @notice Emitted on parameters initialized.\\n    event Initialized(uint256 _poolId, address _recipient, uint256 _endTime);\\n}\\n\",\"keccak256\":\"0x71e5db44f47a4e7256deceef5077d5ddda9dcb5815bf12590746f3d7aa812054\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IVestingPools.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IVestingPools {\\n    /**\\n     * @notice Returns Token address.\\n     */\\n    function token() external view returns (address);\\n\\n    /**\\n     * @notice Returns the wallet address of the specified pool.\\n     */\\n    function getWallet(uint256 poolId) external view returns (address);\\n\\n    /**\\n     * @notice Returns the amount that may be vested now from the given pool.\\n     */\\n    function releasableAmount(uint256 poolId) external view returns (uint256);\\n\\n    /**\\n     * @notice Returns the amount that has been vested from the given pool\\n     */\\n    function vestedAmount(uint256 poolId) external view returns (uint256);\\n\\n    /**\\n     * @notice Vests the specified amount from the given pool to the pool wallet.\\n     * If the amount is zero, it vests the entire \\\"releasable\\\" amount.\\n     * @dev Pool wallet may call only.\\n     * @return released - Amount released.\\n     */\\n    function release(uint256 poolId, uint256 amount)\\n        external\\n        returns (uint256 released);\\n\\n    /**\\n     * @notice Vests the specified amount from the given pool to the given address.\\n     * If the amount is zero, it vests the entire \\\"releasable\\\" amount.\\n     * @dev Pool wallet may call only.\\n     * @return released - Amount released.\\n     */\\n    function releaseTo(\\n        uint256 poolId,\\n        address account,\\n        uint256 amount\\n    ) external returns (uint256 released);\\n\\n    /**\\n     * @notice Updates the wallet for the given pool.\\n     * @dev Only address with the 'wallet' role may call.\\n     */\\n    function updatePoolWallet(uint256 poolId, address newWallet) external;\\n\\n    /// @notice Emitted on an amount vesting.\\n    event Released(uint256 indexed poolId, address to, uint256 amount);\\n}\\n\",\"keccak256\":\"0x369d723364a532a849af06b1f583e461dd34f71169105e8799e1254f9f9383fb\",\"license\":\"MIT\"},\"contracts/utils/ImmutableOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable-next-line compiler-fixed, compiler-gt-0_8\\npragma solidity ^0.8.0;\\n\\n/// @title Staking\\nabstract contract ImmutableOwnable {\\n    /// @notice The owner who has privileged rights\\n    // solhint-disable-next-line var-name-mixedcase\\n    address public immutable OWNER;\\n\\n    /// @dev Throws if called by any account other than the {OWNER}.\\n    modifier onlyOwner() {\\n        require(OWNER == msg.sender, \\\"ImmOwn: unauthorized\\\");\\n        _;\\n    }\\n\\n    constructor(address _owner) {\\n        require(_owner != address(0), \\\"ImmOwn: zero owner address\\\");\\n        OWNER = _owner;\\n    }\\n}\\n\",\"keccak256\":\"0xa7fcff1c9e37b9c757c39cf83b9149b440de47f72a1fb77426a75520fedead5c\",\"license\":\"MIT\"},\"contracts/utils/Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable-next-line compiler-fixed, compiler-gt-0_8\\npragma solidity ^0.8.0;\\n\\nabstract contract Utils {\\n    function safe32(uint256 n) internal pure returns (uint32) {\\n        require(n < 2**32, \\\"UNSAFE32\\\");\\n        return uint32(n);\\n    }\\n\\n    function safe96(uint256 n) internal pure returns (uint96) {\\n        require(n < 2**96, \\\"UNSAFE96\\\");\\n        return uint96(n);\\n    }\\n\\n    function safe128(uint256 n) internal pure returns (uint128) {\\n        require(n < 2**128, \\\"UNSAFE128\\\");\\n        return uint128(n);\\n    }\\n\\n    function safe160(uint256 n) internal pure returns (uint160) {\\n        require(n < 2**160, \\\"UNSAFE160\\\");\\n        return uint160(n);\\n    }\\n\\n    function safe32TimeNow() internal view returns (uint32) {\\n        return safe32(timeNow());\\n    }\\n\\n    function safe32BlockNow() internal view returns (uint32) {\\n        return safe32(blockNow());\\n    }\\n\\n    /// @dev Returns the current block timestamp (added to ease testing)\\n    function timeNow() internal view virtual returns (uint256) {\\n        return block.timestamp;\\n    }\\n\\n    /// @dev Returns the current block number (added to ease testing)\\n    function blockNow() internal view virtual returns (uint256) {\\n        return block.number;\\n    }\\n}\\n\",\"keccak256\":\"0x792e9324cc764dbd45210aa817127d67fae28bee7dc9b91e98cd1253617b04e1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610b19380380610b1983398101604081905261002f91610118565b806001600160a01b03811661008b5760405162461bcd60e51b815260206004820152601a60248201527f496d6d4f776e3a207a65726f206f776e6572206164647265737300000000000060448201526064015b60405180910390fd5b60601b6001600160601b031916608052816001600160a01b0381166100e55760405162461bcd60e51b815260206004820152601060248201526f52503a207a65726f206164647265737360801b6044820152606401610082565b505060601b6001600160601b03191660a05261014a565b80516001600160a01b038116811461011357600080fd5b919050565b6000806040838503121561012a578182fd5b610133836100fc565b9150610141602084016100fc565b90509250929050565b60805160601c60a05160601c61097b61019e60003960008181610189015281816102bd01528181610541015281816107a9015261082601526000818160ad015281816103ba01526106bd015261097b6000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80635b9400811161007657806366d003ac1161005b57806366d003ac146101685780637054ac2514610184578063f65505f6146101ab57600080fd5b80635b9400811461014b5780635e02af2a1461015357600080fd5b8063117803e3146100a85780633197cbb6146100ec5780633c43059d146101165780633e0dc34e1461012c575b600080fd5b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b60005461010190610100900463ffffffff1681565b60405163ffffffff90911681526020016100e3565b61011e6101be565b6040519081526020016100e3565b6000546101399060ff1681565b60405160ff90911681526020016100e3565b61011e610371565b6101666101613660046108ff565b6103b8565b005b6000546100cf906501000000000090046001600160a01b031681565b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101666101b93660046108a8565b6106bb565b600080546501000000000090046001600160a01b031633146102275760405162461bcd60e51b815260206004820152601060248201527f52503a20756e617574686f72697a65640000000000000000000000000000000060448201526064015b60405180910390fd5b600054610100900463ffffffff1642106102715760405162461bcd60e51b815260206004820152600b60248201526a14940e88195e1c1a5c995960aa1b604482015260640161021e565b610279610809565b9050801561036e57600054604051632a7d7bc560e01b815260ff82166004820152650100000000009091046001600160a01b039081166024830152604482018390527f00000000000000000000000000000000000000000000000000000000000000001690632a7d7bc590606401602060405180830381600087803b15801561030157600080fd5b505af1158015610315573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033991906108e7565b506040518181527f612773fe32ce5ff928e8196b31fe6ebfdbc51c93547d7e8a28cff137bfd317919060200160405180910390a15b90565b600080546501000000000090046001600160a01b03166103915750600090565b600054610100900463ffffffff1642106103ab5750600090565b6103b3610809565b905090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146104305760405162461bcd60e51b815260206004820152601460248201527f496d6d4f776e3a20756e617574686f72697a6564000000000000000000000000604482015260640161021e565b816001600160a01b03811661047a5760405162461bcd60e51b815260206004820152601060248201526f52503a207a65726f206164647265737360801b604482015260640161021e565b6000546501000000000090046001600160a01b0316156104dc5760405162461bcd60e51b815260206004820152600f60248201527f52503a20696e697469616c697a65640000000000000000000000000000000000604482015260640161021e565b428263ffffffff161161051f5760405162461bcd60e51b815260206004820152600b60248201526a14940e88195e1c1a5c995960aa1b604482015260640161021e565b604051635470b13b60e01b815260ff8516600482015230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635470b13b9060240160206040518083038186803b15801561058357600080fd5b505afa158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb91906108cb565b6001600160a01b0316146106115760405162461bcd60e51b815260206004820152600560248201527f52503a4537000000000000000000000000000000000000000000000000000000604482015260640161021e565b6000805460ff86167fffffffffffffff0000000000000000000000000000000000000000ffffffff009091168117650100000000006001600160a01b0387169081029190911764ffffffff00191661010063ffffffff8716908102919091179093556040805192835260208301919091528101919091527f0a704da44b3f5e15006ba5f8755eff30ba4f855f7a647776ed3584627af820529060600160405180910390a150505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146107335760405162461bcd60e51b815260206004820152601460248201527f496d6d4f776e3a20756e617574686f72697a6564000000000000000000000000604482015260640161021e565b806001600160a01b03811661077d5760405162461bcd60e51b815260206004820152601060248201526f52503a207a65726f206164647265737360801b604482015260640161021e565b60005460405163085cb13f60e01b815260ff90911660048201526001600160a01b0383811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063085cb13f90604401600060405180830381600087803b1580156107ed57600080fd5b505af1158015610801573d6000803e3d6000fd5b505050505050565b60008054604051632c93fe5160e11b815260ff90911660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635927fca29060240160206040518083038186803b15801561087057600080fd5b505afa158015610884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b391906108e7565b6000602082840312156108b9578081fd5b81356108c481610956565b9392505050565b6000602082840312156108dc578081fd5b81516108c481610956565b6000602082840312156108f8578081fd5b5051919050565b600080600060608486031215610913578182fd5b833560ff81168114610923578283fd5b9250602084013561093381610956565b9150604084013563ffffffff8116811461094b578182fd5b809150509250925092565b6001600160a01b038116811461096b57600080fd5b5056fea164736f6c6343000804000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c80635b9400811161007657806366d003ac1161005b57806366d003ac146101685780637054ac2514610184578063f65505f6146101ab57600080fd5b80635b9400811461014b5780635e02af2a1461015357600080fd5b8063117803e3146100a85780633197cbb6146100ec5780633c43059d146101165780633e0dc34e1461012c575b600080fd5b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b60005461010190610100900463ffffffff1681565b60405163ffffffff90911681526020016100e3565b61011e6101be565b6040519081526020016100e3565b6000546101399060ff1681565b60405160ff90911681526020016100e3565b61011e610371565b6101666101613660046108ff565b6103b8565b005b6000546100cf906501000000000090046001600160a01b031681565b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101666101b93660046108a8565b6106bb565b600080546501000000000090046001600160a01b031633146102275760405162461bcd60e51b815260206004820152601060248201527f52503a20756e617574686f72697a65640000000000000000000000000000000060448201526064015b60405180910390fd5b600054610100900463ffffffff1642106102715760405162461bcd60e51b815260206004820152600b60248201526a14940e88195e1c1a5c995960aa1b604482015260640161021e565b610279610809565b9050801561036e57600054604051632a7d7bc560e01b815260ff82166004820152650100000000009091046001600160a01b039081166024830152604482018390527f00000000000000000000000000000000000000000000000000000000000000001690632a7d7bc590606401602060405180830381600087803b15801561030157600080fd5b505af1158015610315573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033991906108e7565b506040518181527f612773fe32ce5ff928e8196b31fe6ebfdbc51c93547d7e8a28cff137bfd317919060200160405180910390a15b90565b600080546501000000000090046001600160a01b03166103915750600090565b600054610100900463ffffffff1642106103ab5750600090565b6103b3610809565b905090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146104305760405162461bcd60e51b815260206004820152601460248201527f496d6d4f776e3a20756e617574686f72697a6564000000000000000000000000604482015260640161021e565b816001600160a01b03811661047a5760405162461bcd60e51b815260206004820152601060248201526f52503a207a65726f206164647265737360801b604482015260640161021e565b6000546501000000000090046001600160a01b0316156104dc5760405162461bcd60e51b815260206004820152600f60248201527f52503a20696e697469616c697a65640000000000000000000000000000000000604482015260640161021e565b428263ffffffff161161051f5760405162461bcd60e51b815260206004820152600b60248201526a14940e88195e1c1a5c995960aa1b604482015260640161021e565b604051635470b13b60e01b815260ff8516600482015230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635470b13b9060240160206040518083038186803b15801561058357600080fd5b505afa158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb91906108cb565b6001600160a01b0316146106115760405162461bcd60e51b815260206004820152600560248201527f52503a4537000000000000000000000000000000000000000000000000000000604482015260640161021e565b6000805460ff86167fffffffffffffff0000000000000000000000000000000000000000ffffffff009091168117650100000000006001600160a01b0387169081029190911764ffffffff00191661010063ffffffff8716908102919091179093556040805192835260208301919091528101919091527f0a704da44b3f5e15006ba5f8755eff30ba4f855f7a647776ed3584627af820529060600160405180910390a150505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146107335760405162461bcd60e51b815260206004820152601460248201527f496d6d4f776e3a20756e617574686f72697a6564000000000000000000000000604482015260640161021e565b806001600160a01b03811661077d5760405162461bcd60e51b815260206004820152601060248201526f52503a207a65726f206164647265737360801b604482015260640161021e565b60005460405163085cb13f60e01b815260ff90911660048201526001600160a01b0383811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063085cb13f90604401600060405180830381600087803b1580156107ed57600080fd5b505af1158015610801573d6000803e3d6000fd5b505050505050565b60008054604051632c93fe5160e11b815260ff90911660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635927fca29060240160206040518083038186803b15801561087057600080fd5b505afa158015610884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b391906108e7565b6000602082840312156108b9578081fd5b81356108c481610956565b9392505050565b6000602082840312156108dc578081fd5b81516108c481610956565b6000602082840312156108f8578081fd5b5051919050565b600080600060608486031215610913578182fd5b833560ff81168114610923578283fd5b9250602084013561093381610956565b9150604084013563ffffffff8116811461094b578182fd5b809150509250925092565b6001600160a01b038116811461096b57600080fd5b5056fea164736f6c6343000804000a",
  "devdoc": {
    "details": "One of the vesting pools (maybe, the major one) which the VestingPools contract vests $ZKP tokens to is the \"Reward Pool\" (aka \"Protocol Pool\"). This contract assumed to have a \"pool wallet\" role with the VestingPools, and therefore has a privilege to request vesting $ZKPs from the Reward Pool to the \"recipient\". The \"RewardMaster\" contract, that distributes tokens to users as rewards, is assumed to be the \"recipient\". This contract is expected to be replaced. Therefore it allows the owner to transfer the \"pool wallet\" role to another account.",
    "kind": "dev",
    "methods": {
      "initialize(uint8,address,uint32)": {
        "details": "Owner only may call, once only This contract address must be set in the VestingPools as the wallet for the pool"
      },
      "transferPoolWalletRole(address)": {
        "details": "Owner only may call, once only"
      },
      "vestRewards()": {
        "details": "{recipient} only may call"
      }
    },
    "stateVariables": {
      "endTime": {
        "details": "(UNIX) Time when vesting gets disabled"
      }
    },
    "title": "RewardPool",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Initialized(uint256,address,uint256)": {
        "notice": "Emitted on parameters initialized."
      },
      "Vested(uint256)": {
        "notice": "Emitted on vesting to the {recipient}"
      }
    },
    "kind": "user",
    "methods": {
      "OWNER()": {
        "notice": "The owner who has privileged rights"
      },
      "VESTING_POOLS()": {
        "notice": "Address of the VestingPools instance"
      },
      "initialize(uint8,address,uint32)": {
        "notice": "Sets the {poolId} and the {recipient} to given values"
      },
      "poolId()": {
        "notice": "ID of the pool (in the VestingPools) to vest from"
      },
      "recipient()": {
        "notice": "Address to vest tokens to"
      },
      "releasableAmount()": {
        "notice": "Returns token amount that may be released (vested) now"
      },
      "transferPoolWalletRole(address)": {
        "notice": "Calls VestingPools to transfer 'pool wallet' role to given address"
      },
      "vestRewards()": {
        "notice": "Vests releasable token amount to the {recipient}"
      }
    },
    "notice": "It vests $ZKP token from the Panther Protocol \"Reward Pool\".",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 839,
        "contract": "contracts/RewardPool.sol:RewardPool",
        "label": "poolId",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 842,
        "contract": "contracts/RewardPool.sol:RewardPool",
        "label": "endTime",
        "offset": 1,
        "slot": "0",
        "type": "t_uint32"
      },
      {
        "astId": 845,
        "contract": "contracts/RewardPool.sol:RewardPool",
        "label": "recipient",
        "offset": 5,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}
