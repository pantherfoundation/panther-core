{
  "address": "0xA77A0cC047C56AC5b2c9bCaCf191d9e8Ac634b81",
  "abi": [
    {
      "inputs": [],
      "name": "getRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x5a0c174cc3f6173170708d1e4a9437c07d46e11b7617ed3e9e7deb4ef98f6efe",
  "receipt": {
    "to": null,
    "from": "0xfB474a7FeCDaFBD412ebF0d60A0C32794F82d3dD",
    "contractAddress": "0xA77A0cC047C56AC5b2c9bCaCf191d9e8Ac634b81",
    "transactionIndex": 20,
    "gasUsed": "76987",
    "logsBloom": "0x
    "blockHash": "0xaf81a334e293806215ffa0734babe8b5a472a10f9187c33da95d7699afbc993b",
    "transactionHash": "0x5a0c174cc3f6173170708d1e4a9437c07d46e11b7617ed3e9e7deb4ef98f6efe",
    "logs": [
      {
        "transactionIndex": 20,
        "blockNumber": 38977546,
        "transactionHash": "0x5a0c174cc3f6173170708d1e4a9437c07d46e11b7617ed3e9e7deb4ef98f6efe",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000fb474a7fecdafbd412ebf0d60a0c32794f82d3dd",
          "0x000000000000000000000000e7f13f6bc1e7f5ca4a6c9a255124ce22c46f8ef0"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000006907662e55000000000000000000000000000000000000000000000000001939c8379fc93a0b00000000000000000000000000000000000000000000001a0b1c9075f986a69700000000000000000000000000000000000000000000000019395f30399ae50b00000000000000000000000000000000000000000000001a0b1cf97d5fb4fb97",
        "logIndex": 53,
        "blockHash": "0xaf81a334e293806215ffa0734babe8b5a472a10f9187c33da95d7699afbc993b"
      }
    ],
    "blockNumber": 38977546,
    "cumulativeGasUsed": "5896180",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8ced4b4e64f70b0ab3e17932cf8fd4ee",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRoot()\":{\"notice\":\"ZZone tree root generation This tree consists of 1 leaf:      - leafIndex = 0      - commitment = poseidon([              // `zoneId`, ID of the only zone currently active              1n,              // `edDsaPubKey[0]`, x-coordinate of the of the Zone Safe operator's pubkey              1079947189093879423832572021742411110959706509214994525945407912687412115152n,              // `edDsaPubKey[1]`, y-coordinate of the of the Zone Safe operator's pubkey              6617854811593651784376273094293148407007707755076821057553730151008062424747n,              // `originZoneIDs`, List of allowed origin zones IDs (the only zone, with ID \\\"1\\\", is allowed yet)              1n,              // `targetZoneIDs`, List of allowed target zones IDs (only this zone, with ID \\\"1\\\", is allowed yet)              1n,              // `zZoneNetworkIDsBitMap`, The bit map of allowed network (bit index is network ID)              // Two one-bit flags are set (to \\\"1\\\"):              //      - bit #0 (LS bit) - Goerli (zNetworkId = 0) enabled              //      - bit #1 - Mumbai (zNetworkId = 1) enabled              3n,              // `zZoneKycKytMerkleTreeLeafIDsAndRulesList`              // List of allowed KYC/KYT pubkeys and rule (10 elements x 24 bits each)              // 1st element defined only, it's in LS 24 bits:              //      - KYC rule ID, 91 ('0b1011011'), in 8 LS bits,              //      - followed by the provider pubkey leaf index, 0, in next 16 bits              //      (0b000000000000000001011011)              91n,              // `zZoneKycExpiryTime`, Period in seconds of KYC attestation validity (120 days)              10368000n,              // `zZoneKytExpiryTime`, Period in seconds of KYT attestation validity (24 hours)              86400n,              // `zZoneDepositMaxAmount`, Maximum allowed deposit amount              // (expressed in the \\\"weighted scaled\\\" units)              BigInt(5e10),              // `zZoneWithrawMaxAmount`, Maximum allowed withdrawal amount              // (expressed in the \\\"weighted scaled\\\" units)              BigInt(5e10),              // `zZoneInternalMaxAmount`, Maximum allowed internal tx amount              // (expressed in the \\\"weighted scaled\\\" units)              BigInt(5e12),              // `zZoneZAccountIDsBlackList`, Zone-level List of blacklisted zAccount IDs              // (10 elements of 24 bits each)              // The zAccount ID of 0x0FFF can't exist. 24 bits set to \\\"1\\\" in a              // list element means \\\"no zAccount\\\" is blacklisted.              // 240 bits set to one means \\\"no zAccounts are blacklisted\\\"              // The value is 240 bits set to 1:              1766847064778384329583297500742918515827483896875618958121606201292619775n,              // `zZoneMaximumAmountPerTimePeriod`, Limit on the sum of              // deposits+withdrawals+internal_txs amounts for the              // period defined further (expressed in the \\\"weighted scaled\\\" units)              BigInt(5e14),              // `zZoneTimePeriodPerMaximumAmount`, Period to count the above limit for (24 hours)              86400n,          ]) = 0x0e6ab28e813839edfc865b663fef947a99c7c5418b52bfdf99a7e6d35a28d611              // (6520898021802809410287280892217974246949765980761337479284035863305500808721n)      - siblings = [              0x0667764c376602b72ef22218e1673c2cc8546201f9a77807570b3e5de137680d              0x232fc5fea3994c77e07e1bab1ec362727b0f71f291c17c34891dd4faf1457bd4              0x077851cf613fd96280795a3cabc89663f524b1b545a3b1c7c79130b0f7d251c8              0x1d79fd0bc46f7ca934dbcd3386a06f03c43f497851b3815ee726e7f9b26e504c              0x05c0c15753806f506f64c18bf07116542451822479c4a89305cd4eb7ee94c800              0x2b56fd5e780ebebdacdd27e6464cf01aac089461a998814974a7504aabb2023f              0x2e99dc37b0a4f107b20278c26562b55df197e0b3eb237ec672f4cf729d159b69              0x225624653ac89fe211c0c3d303142a4caf24eb09050be08c33af2e7a1e372a0f              0x276c76358db8af465e2073e4b25d6b1d83f0b9b077f8bd694deefe917e2028d7              0x09df92f4ade78ea54b243914f93c2da33414c22328a73274b885f32aa9dea718              0x1c78b565f2bfc03e230e0cf12ecc9613ab8221f607d6f6bc2a583ccd690ecc58              0x2879d62c83d6a3af05c57a4aee11611a03edec5ff8860b07de77968f47ff1c5f              0x28ad970560de01e93b613aabc930fcaf087114743909783e3770a1ed07c2cde6              0x27ca60def9dd0603074444029cbcbeaa9dbe77668479ac1db738bb892d9f3b6d              0x28e4c1e90bbfa69de93abf6cbdc7cd1c0753a128e83b2b3afe34e0471a13ff55              0x1b89c44a9f153266ad5bf754d4b252c26acba7d21fc661b94dc0618c6a82f49c          ]\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/ZZonesRegistry.sol\":\"ZZonesRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/protocol/ZZonesRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n// SPDX-FileCopyrightText: Copyright 2021-22 Panther Ventures Limited Gibraltar\\npragma solidity 0.8.16;\\n\\nimport \\\"./pantherForest/interfaces/ITreeRootGetter.sol\\\";\\n\\ncontract ZZonesRegistry is ITreeRootGetter {\\n    /**\\n     * ZZone tree root generation\\n     * This tree consists of 1 leaf:\\n     *      - leafIndex = 0\\n     *      - commitment = poseidon([\\n     *              // `zoneId`, ID of the only zone currently active\\n     *              1n,\\n     *              // `edDsaPubKey[0]`, x-coordinate of the of the Zone Safe operator's pubkey\\n     *              1079947189093879423832572021742411110959706509214994525945407912687412115152n,\\n     *              // `edDsaPubKey[1]`, y-coordinate of the of the Zone Safe operator's pubkey\\n     *              6617854811593651784376273094293148407007707755076821057553730151008062424747n,\\n     *              // `originZoneIDs`, List of allowed origin zones IDs (the only zone, with ID \\\"1\\\", is allowed yet)\\n     *              1n,\\n     *              // `targetZoneIDs`, List of allowed target zones IDs (only this zone, with ID \\\"1\\\", is allowed yet)\\n     *              1n,\\n     *              // `zZoneNetworkIDsBitMap`, The bit map of allowed network (bit index is network ID)\\n     *              // Two one-bit flags are set (to \\\"1\\\"):\\n     *              //      - bit #0 (LS bit) - Goerli (zNetworkId = 0) enabled\\n     *              //      - bit #1 - Mumbai (zNetworkId = 1) enabled\\n     *              3n,\\n     *              // `zZoneKycKytMerkleTreeLeafIDsAndRulesList`\\n     *              // List of allowed KYC/KYT pubkeys and rule (10 elements x 24 bits each)\\n     *              // 1st element defined only, it's in LS 24 bits:\\n     *              //      - KYC rule ID, 91 ('0b1011011'), in 8 LS bits,\\n     *              //      - followed by the provider pubkey leaf index, 0, in next 16 bits\\n     *              //      (0b000000000000000001011011)\\n     *              91n,\\n     *              // `zZoneKycExpiryTime`, Period in seconds of KYC attestation validity (120 days)\\n     *              10368000n,\\n     *              // `zZoneKytExpiryTime`, Period in seconds of KYT attestation validity (24 hours)\\n     *              86400n,\\n     *              // `zZoneDepositMaxAmount`, Maximum allowed deposit amount\\n     *              // (expressed in the \\\"weighted scaled\\\" units)\\n     *              BigInt(5e10),\\n     *              // `zZoneWithrawMaxAmount`, Maximum allowed withdrawal amount\\n     *              // (expressed in the \\\"weighted scaled\\\" units)\\n     *              BigInt(5e10),\\n     *              // `zZoneInternalMaxAmount`, Maximum allowed internal tx amount\\n     *              // (expressed in the \\\"weighted scaled\\\" units)\\n     *              BigInt(5e12),\\n     *              // `zZoneZAccountIDsBlackList`, Zone-level List of blacklisted zAccount IDs\\n     *              // (10 elements of 24 bits each)\\n     *              // The zAccount ID of 0x0FFF can't exist. 24 bits set to \\\"1\\\" in a\\n     *              // list element means \\\"no zAccount\\\" is blacklisted.\\n     *              // 240 bits set to one means \\\"no zAccounts are blacklisted\\\"\\n     *              // The value is 240 bits set to 1:\\n     *              1766847064778384329583297500742918515827483896875618958121606201292619775n,\\n     *              // `zZoneMaximumAmountPerTimePeriod`, Limit on the sum of\\n     *              // deposits+withdrawals+internal_txs amounts for the\\n     *              // period defined further (expressed in the \\\"weighted scaled\\\" units)\\n     *              BigInt(5e14),\\n     *              // `zZoneTimePeriodPerMaximumAmount`, Period to count the above limit for (24 hours)\\n     *              86400n,\\n     *          ]) = 0x0e6ab28e813839edfc865b663fef947a99c7c5418b52bfdf99a7e6d35a28d611\\n     *              // (6520898021802809410287280892217974246949765980761337479284035863305500808721n)\\n     *\\n     *      - siblings = [\\n     *              0x0667764c376602b72ef22218e1673c2cc8546201f9a77807570b3e5de137680d\\n     *              0x232fc5fea3994c77e07e1bab1ec362727b0f71f291c17c34891dd4faf1457bd4\\n     *              0x077851cf613fd96280795a3cabc89663f524b1b545a3b1c7c79130b0f7d251c8\\n     *              0x1d79fd0bc46f7ca934dbcd3386a06f03c43f497851b3815ee726e7f9b26e504c\\n     *              0x05c0c15753806f506f64c18bf07116542451822479c4a89305cd4eb7ee94c800\\n     *              0x2b56fd5e780ebebdacdd27e6464cf01aac089461a998814974a7504aabb2023f\\n     *              0x2e99dc37b0a4f107b20278c26562b55df197e0b3eb237ec672f4cf729d159b69\\n     *              0x225624653ac89fe211c0c3d303142a4caf24eb09050be08c33af2e7a1e372a0f\\n     *              0x276c76358db8af465e2073e4b25d6b1d83f0b9b077f8bd694deefe917e2028d7\\n     *              0x09df92f4ade78ea54b243914f93c2da33414c22328a73274b885f32aa9dea718\\n     *              0x1c78b565f2bfc03e230e0cf12ecc9613ab8221f607d6f6bc2a583ccd690ecc58\\n     *              0x2879d62c83d6a3af05c57a4aee11611a03edec5ff8860b07de77968f47ff1c5f\\n     *              0x28ad970560de01e93b613aabc930fcaf087114743909783e3770a1ed07c2cde6\\n     *              0x27ca60def9dd0603074444029cbcbeaa9dbe77668479ac1db738bb892d9f3b6d\\n     *              0x28e4c1e90bbfa69de93abf6cbdc7cd1c0753a128e83b2b3afe34e0471a13ff55\\n     *              0x1b89c44a9f153266ad5bf754d4b252c26acba7d21fc661b94dc0618c6a82f49c\\n     *          ]\\n     */\\n    function getRoot() external pure returns (bytes32) {\\n        // 2768686232753548194788154003002220124197365245281377680762459495658913308970n\\n        return\\n            0x061f055809dd21f02840c10fca69afe1254a20a617fb0e5aae1465c39f04a12a;\\n    }\\n}\\n\",\"keccak256\":\"0x8fb457cdf6f48fd356252e8db6f9e63789798bb4b9ef4f28600f296500d9b2a7\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/pantherForest/interfaces/ITreeRootGetter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SPDX-FileCopyrightText: Copyright 2023 Panther Ventures Limited Gibraltar\\npragma solidity ^0.8.16;\\n\\ninterface ITreeRootGetter {\\n    function getRoot() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xc6bb37fe4059cfe13c15f4c1d324b2de68a48348e136bf6cc72421f4721dc21d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50606d80601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635ca1e16514602d575b600080fd5b7f061f055809dd21f02840c10fca69afe1254a20a617fb0e5aae1465c39f04a12a60405190815260200160405180910390f3fea164736f6c6343000810000a",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80635ca1e16514602d575b600080fd5b7f061f055809dd21f02840c10fca69afe1254a20a617fb0e5aae1465c39f04a12a60405190815260200160405180910390f3fea164736f6c6343000810000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getRoot()": {
        "notice": "ZZone tree root generation This tree consists of 1 leaf:      - leafIndex = 0      - commitment = poseidon([              // `zoneId`, ID of the only zone currently active              1n,              // `edDsaPubKey[0]`, x-coordinate of the of the Zone Safe operator's pubkey              1079947189093879423832572021742411110959706509214994525945407912687412115152n,              // `edDsaPubKey[1]`, y-coordinate of the of the Zone Safe operator's pubkey              6617854811593651784376273094293148407007707755076821057553730151008062424747n,              // `originZoneIDs`, List of allowed origin zones IDs (the only zone, with ID \"1\", is allowed yet)              1n,              // `targetZoneIDs`, List of allowed target zones IDs (only this zone, with ID \"1\", is allowed yet)              1n,              // `zZoneNetworkIDsBitMap`, The bit map of allowed network (bit index is network ID)              // Two one-bit flags are set (to \"1\"):              //      - bit #0 (LS bit) - Goerli (zNetworkId = 0) enabled              //      - bit #1 - Mumbai (zNetworkId = 1) enabled              3n,              // `zZoneKycKytMerkleTreeLeafIDsAndRulesList`              // List of allowed KYC/KYT pubkeys and rule (10 elements x 24 bits each)              // 1st element defined only, it's in LS 24 bits:              //      - KYC rule ID, 91 ('0b1011011'), in 8 LS bits,              //      - followed by the provider pubkey leaf index, 0, in next 16 bits              //      (0b000000000000000001011011)              91n,              // `zZoneKycExpiryTime`, Period in seconds of KYC attestation validity (120 days)              10368000n,              // `zZoneKytExpiryTime`, Period in seconds of KYT attestation validity (24 hours)              86400n,              // `zZoneDepositMaxAmount`, Maximum allowed deposit amount              // (expressed in the \"weighted scaled\" units)              BigInt(5e10),              // `zZoneWithrawMaxAmount`, Maximum allowed withdrawal amount              // (expressed in the \"weighted scaled\" units)              BigInt(5e10),              // `zZoneInternalMaxAmount`, Maximum allowed internal tx amount              // (expressed in the \"weighted scaled\" units)              BigInt(5e12),              // `zZoneZAccountIDsBlackList`, Zone-level List of blacklisted zAccount IDs              // (10 elements of 24 bits each)              // The zAccount ID of 0x0FFF can't exist. 24 bits set to \"1\" in a              // list element means \"no zAccount\" is blacklisted.              // 240 bits set to one means \"no zAccounts are blacklisted\"              // The value is 240 bits set to 1:              1766847064778384329583297500742918515827483896875618958121606201292619775n,              // `zZoneMaximumAmountPerTimePeriod`, Limit on the sum of              // deposits+withdrawals+internal_txs amounts for the              // period defined further (expressed in the \"weighted scaled\" units)              BigInt(5e14),              // `zZoneTimePeriodPerMaximumAmount`, Period to count the above limit for (24 hours)              86400n,          ]) = 0x0e6ab28e813839edfc865b663fef947a99c7c5418b52bfdf99a7e6d35a28d611              // (6520898021802809410287280892217974246949765980761337479284035863305500808721n)      - siblings = [              0x0667764c376602b72ef22218e1673c2cc8546201f9a77807570b3e5de137680d              0x232fc5fea3994c77e07e1bab1ec362727b0f71f291c17c34891dd4faf1457bd4              0x077851cf613fd96280795a3cabc89663f524b1b545a3b1c7c79130b0f7d251c8              0x1d79fd0bc46f7ca934dbcd3386a06f03c43f497851b3815ee726e7f9b26e504c              0x05c0c15753806f506f64c18bf07116542451822479c4a89305cd4eb7ee94c800              0x2b56fd5e780ebebdacdd27e6464cf01aac089461a998814974a7504aabb2023f              0x2e99dc37b0a4f107b20278c26562b55df197e0b3eb237ec672f4cf729d159b69              0x225624653ac89fe211c0c3d303142a4caf24eb09050be08c33af2e7a1e372a0f              0x276c76358db8af465e2073e4b25d6b1d83f0b9b077f8bd694deefe917e2028d7              0x09df92f4ade78ea54b243914f93c2da33414c22328a73274b885f32aa9dea718              0x1c78b565f2bfc03e230e0cf12ecc9613ab8221f607d6f6bc2a583ccd690ecc58              0x2879d62c83d6a3af05c57a4aee11611a03edec5ff8860b07de77968f47ff1c5f              0x28ad970560de01e93b613aabc930fcaf087114743909783e3770a1ed07c2cde6              0x27ca60def9dd0603074444029cbcbeaa9dbe77668479ac1db738bb892d9f3b6d              0x28e4c1e90bbfa69de93abf6cbdc7cd1c0753a128e83b2b3afe34e0471a13ff55              0x1b89c44a9f153266ad5bf754d4b252c26acba7d21fc661b94dc0618c6a82f49c          ]"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}