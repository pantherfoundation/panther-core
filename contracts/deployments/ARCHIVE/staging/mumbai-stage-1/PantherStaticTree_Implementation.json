{
  "address": "0x984A2Beb40E3cbFCBE854A1b1E9af93d24A9BdCb",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pantherForest",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zAssetsTreeController",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zAccountsBlacklistedTreeController",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zNetworksTreeController",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zZnonesTreeController",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_providersKeysTreeController",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "leafIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "updatedLeaf",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "updatedRoot",
          "type": "bytes32"
        }
      ],
      "name": "RootUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OWNER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PANTHER_FOREST",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROVIDERS_KEYS_TREE_CONTROLLER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZACCOUNTS_BLACKLISTED_TREE_CONTROLLER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZASSETS_TREE_CONTROLLER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZNETWORKS_TREE_CONTROLLER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZZONES_TREE_CONTROLLER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "leafControllers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "leafs",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setDebugRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "updatedLeaf",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "leafIndex",
          "type": "uint256"
        }
      ],
      "name": "updateRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf38813e436fe84c613efb3f6cd6a05f6110bd22d50d2207a227e6da89e5ee6d0",
  "receipt": {
    "to": null,
    "from": "0xfB474a7FeCDaFBD412ebF0d60A0C32794F82d3dD",
    "contractAddress": "0x984A2Beb40E3cbFCBE854A1b1E9af93d24A9BdCb",
    "transactionIndex": 22,
    "gasUsed": "663951",
    "logsBloom": "0x
    "blockHash": "0x44d22beb13c72f2e537cba6912c8a3a4685fca7798c292416fdb46e97e08ce71",
    "transactionHash": "0xf38813e436fe84c613efb3f6cd6a05f6110bd22d50d2207a227e6da89e5ee6d0",
    "logs": [
      {
        "transactionIndex": 22,
        "blockNumber": 38977718,
        "transactionHash": "0xf38813e436fe84c613efb3f6cd6a05f6110bd22d50d2207a227e6da89e5ee6d0",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000fb474a7fecdafbd412ebf0d60a0c32794f82d3dd",
          "0x000000000000000000000000e7f13f6bc1e7f5ca4a6c9a255124ce22c46f8ef0"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000389ca3541410000000000000000000000000000000000000000000000000019081ec5c2d8f42500000000000000000000000000000000000000000000001a187da16144a62923000000000000000000000000000000000000000000000000190494fb8d97b32500000000000000000000000000000000000000000000001a18812b2b79e76a23",
        "logIndex": 102,
        "blockHash": "0x44d22beb13c72f2e537cba6912c8a3a4685fca7798c292416fdb46e97e08ce71"
      }
    ],
    "blockNumber": 38977718,
    "cumulativeGasUsed": "16440784",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xfB474a7FeCDaFBD412ebF0d60A0C32794F82d3dD",
    "0xfDfD920F2152565E9D7b589e4e9faeE6699AD4bd",
    "0xa8C440Dd412F0cdEEC70B3cA8921d2CbEB6F738b",
    "0x518cD70a767d87Bcec1262adcf7bf5520e2e3B5D",
    "0x9b42E751352dd500089C723D97Cd2Bf959d3b3ef",
    "0xA77A0cC047C56AC5b2c9bCaCf191d9e8Ac634b81",
    "0x5c71fEe2E7f7B2Ca67dc621E89542C9299aba551"
  ],
  "numDeployments": 1,
  "solcInputHash": "8ced4b4e64f70b0ab3e17932cf8fd4ee",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pantherForest\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zAssetsTreeController\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zAccountsBlacklistedTreeController\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zNetworksTreeController\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zZnonesTreeController\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_providersKeysTreeController\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"leafIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"updatedLeaf\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"updatedRoot\",\"type\":\"bytes32\"}],\"name\":\"RootUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PANTHER_FOREST\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROVIDERS_KEYS_TREE_CONTROLLER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZACCOUNTS_BLACKLISTED_TREE_CONTROLLER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZASSETS_TREE_CONTROLLER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZNETWORKS_TREE_CONTROLLER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZZONES_TREE_CONTROLLER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"leafControllers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"leafs\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setDebugRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"updatedLeaf\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"leafIndex\",\"type\":\"uint256\"}],\"name\":\"updateRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"OWNER()\":{\"notice\":\"The owner who has privileged rights\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/PantherStaticTree.sol\":\"PantherStaticTree\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/common/ImmutableOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SPDX-FileCopyrightText: Copyright 2021-22 Panther Ventures Limited Gibraltar\\n// slither-disable-next-line solc-version\\npragma solidity ^0.8.4;\\n\\n/// @title Staking\\nabstract contract ImmutableOwnable {\\n    /// @notice The owner who has privileged rights\\n    // solhint-disable-next-line var-name-mixedcase\\n    address public immutable OWNER;\\n\\n    /// @dev Throws if called by any account other than the {OWNER}.\\n    modifier onlyOwner() {\\n        require(OWNER == msg.sender, \\\"ImmOwn: unauthorized\\\");\\n        _;\\n    }\\n\\n    constructor(address _owner) {\\n        require(_owner != address(0), \\\"ImmOwn: zero owner address\\\");\\n        OWNER = _owner;\\n    }\\n}\\n\",\"keccak256\":\"0x50d471ce507ca3796ff407b52d0dffead3b4eb6c0f0afea9350f712f9c5f1416\",\"license\":\"MIT\"},\"contracts/protocol/PantherStaticTree.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n// SPDX-FileCopyrightText: Copyright 2021-23 Panther Ventures Limited Gibraltar\\npragma solidity ^0.8.16;\\n\\nimport \\\"./pantherForest/interfaces/ITreeRootGetter.sol\\\";\\nimport \\\"./pantherForest/interfaces/ITreeRootUpdater.sol\\\";\\nimport \\\"./pantherForest/Constants.sol\\\";\\n\\nimport \\\"../common/ImmutableOwnable.sol\\\";\\nimport \\\"./crypto/PoseidonHashers.sol\\\";\\n\\n// TODO: write PantherStaticTree 'title' and 'notice' (description) similarly to the contracts have\\n// (updating the state of the PantherForest contract on a network).\\n// It's a one-level quin tree that holds the roots of the following trees:\\n// - ZAssetsTree,\\n// - ZZonesTree,\\n// - ProvidersKeys tree,\\n// - ZAccountsBlacklist tree,\\n// - ZNetworksTree\\n//\\n// It's supposed to run on the mainnet only.\\n// Bridges keepers are expected to propagate its root to other networks\\ncontract PantherStaticTree is\\n    ImmutableOwnable,\\n    ITreeRootGetter,\\n    ITreeRootUpdater\\n{\\n    bytes32[50] private _gap;\\n\\n    // solhint-disable var-name-mixedcase\\n\\n    uint256 private constant NUM_LEAFS = 5;\\n\\n    address public immutable PANTHER_FOREST;\\n\\n    address public immutable ZASSETS_TREE_CONTROLLER;\\n    address public immutable ZACCOUNTS_BLACKLISTED_TREE_CONTROLLER;\\n    address public immutable ZNETWORKS_TREE_CONTROLLER;\\n    address public immutable ZZONES_TREE_CONTROLLER;\\n    address public immutable PROVIDERS_KEYS_TREE_CONTROLLER;\\n\\n    // solhint-enable var-name-mixedcase\\n\\n    bytes32 private _staticTreeRoot;\\n    bytes32[NUM_LEAFS] public leafs;\\n\\n    // mapping from leaf index to leaf owner\\n    mapping(uint8 => address) public leafControllers;\\n\\n    event RootUpdated(\\n        uint256 indexed leafIndex,\\n        bytes32 updatedLeaf,\\n        bytes32 updatedRoot\\n    );\\n\\n    constructor(\\n        address _owner,\\n        address _pantherForest,\\n        address _zAssetsTreeController,\\n        address _zAccountsBlacklistedTreeController,\\n        address _zNetworksTreeController,\\n        address _zZnonesTreeController,\\n        address _providersKeysTreeController\\n    ) ImmutableOwnable(_owner) {\\n        require(\\n            _zAssetsTreeController != address(0) &&\\n                _zAccountsBlacklistedTreeController != address(0) &&\\n                _zNetworksTreeController != address(0) &&\\n                _zZnonesTreeController != address(0) &&\\n                _providersKeysTreeController != address(0),\\n            \\\"init: zero address\\\"\\n        );\\n\\n        PANTHER_FOREST = _pantherForest;\\n\\n        ZASSETS_TREE_CONTROLLER = _zAssetsTreeController;\\n        ZACCOUNTS_BLACKLISTED_TREE_CONTROLLER = _zAccountsBlacklistedTreeController;\\n        ZNETWORKS_TREE_CONTROLLER = _zNetworksTreeController;\\n        ZZONES_TREE_CONTROLLER = _zZnonesTreeController;\\n        PROVIDERS_KEYS_TREE_CONTROLLER = _providersKeysTreeController;\\n    }\\n\\n    function initialize() external onlyOwner {\\n        require(_staticTreeRoot == bytes32(0), \\\"PF: Already initialized\\\");\\n\\n        for (uint8 i; i < NUM_LEAFS; ) {\\n            leafs[i] = ITreeRootGetter(_getLeafController(i)).getRoot();\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        _staticTreeRoot = hash(leafs);\\n    }\\n\\n    function setDebugRoot() external onlyOwner {\\n        for (uint8 i; i < NUM_LEAFS; ) {\\n            leafs[i] = ITreeRootGetter(_getLeafController(i)).getRoot();\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        _staticTreeRoot = hash(leafs);\\n    }\\n\\n    function getRoot() external view returns (bytes32) {\\n        return _staticTreeRoot;\\n    }\\n\\n    function updateRoot(bytes32 updatedLeaf, uint256 leafIndex) external {\\n        require(msg.sender == _getLeafController(leafIndex), \\\"unauthorized\\\");\\n\\n        leafs[leafIndex] = updatedLeaf;\\n        _staticTreeRoot = hash(leafs);\\n\\n        ITreeRootUpdater(PANTHER_FOREST).updateRoot(\\n            _staticTreeRoot,\\n            STATIC_TREE_FOREST_LEAF_INDEX\\n        );\\n\\n        emit RootUpdated(leafIndex, updatedLeaf, _staticTreeRoot);\\n    }\\n\\n    function _getLeafController(uint256 leafIndex)\\n        internal\\n        view\\n        returns (address leafController)\\n    {\\n        require(leafIndex < NUM_LEAFS, \\\"PF: INVALID_LEAF_IND\\\");\\n        if (leafIndex == ZASSET_STATIC_LEAF_INDEX)\\n            leafController = ZASSETS_TREE_CONTROLLER;\\n\\n        if (leafIndex == ZACCOUNT_BLACKLIST_STATIC_LEAF_INDEX)\\n            leafController = ZACCOUNTS_BLACKLISTED_TREE_CONTROLLER;\\n\\n        if (leafIndex == ZNETWORK_STATIC_LEAF_INDEX)\\n            leafController = ZNETWORKS_TREE_CONTROLLER;\\n\\n        if (leafIndex == ZZONE_STATIC_LEAF_INDEX)\\n            leafController = ZZONES_TREE_CONTROLLER;\\n\\n        if (leafIndex == PROVIDERS_KEYS_STATIC_LEAF_INDEX)\\n            leafController = PROVIDERS_KEYS_TREE_CONTROLLER;\\n    }\\n\\n    function hash(bytes32[5] memory input) private pure returns (bytes32) {\\n        // We trust the caller provides all input values within the SNARK field\\n        return PoseidonHashers.poseidonT6(input);\\n    }\\n}\\n\",\"keccak256\":\"0xfa0e2312db1b1eea47c90d982c3b20a233ee28e16f7e87433d70fe3aa5f66b5d\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/crypto/Poseidon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.16;\\n\\n// This is a stub to keep solc happy; the actual code is generated\\n// using poseidon_gencontract.js from circomlibjs.\\n\\nlibrary PoseidonT3 {\\n    function poseidon(bytes32[2] memory input) external pure returns (bytes32) {\\n        require(input.length == 99, \\\"FAKE\\\"); // always reverts\\n        return 0;\\n    }\\n}\\n\\nlibrary PoseidonT4 {\\n    function poseidon(bytes32[3] memory input) external pure returns (bytes32) {\\n        require(input.length == 99, \\\"FAKE\\\"); // always reverts\\n        return 0;\\n    }\\n}\\n\\nlibrary PoseidonT5 {\\n    function poseidon(bytes32[4] memory input) external pure returns (bytes32) {\\n        require(input.length == 99, \\\"FAKE\\\"); // always reverts\\n        return 0;\\n    }\\n}\\n\\nlibrary PoseidonT6 {\\n    function poseidon(bytes32[5] memory input) external pure returns (bytes32) {\\n        require(input.length == 99, \\\"FAKE\\\"); // always reverts\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x85ba9420af1dcb1218b655c16044d163c9b070ff5913da034a9961e0e8c5aaf2\",\"license\":\"MIT\"},\"contracts/protocol/crypto/PoseidonHashers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SPDX-FileCopyrightText: Copyright 2021-23 Panther Ventures Limited Gibraltar\\npragma solidity ^0.8.16;\\n\\nimport { FIELD_SIZE } from \\\"./SnarkConstants.sol\\\";\\nimport \\\"./Poseidon.sol\\\";\\n\\nlibrary PoseidonHashers {\\n    string private constant ERR_INPUT_NOT_IN_FIELD =\\n        \\\"PoseidonHasher: input not in field\\\";\\n\\n    function poseidonT3(bytes32[2] memory input)\\n        internal\\n        pure\\n        returns (bytes32)\\n    {\\n        require(\\n            uint256(input[0]) < FIELD_SIZE && uint256(input[1]) < FIELD_SIZE,\\n            ERR_INPUT_NOT_IN_FIELD\\n        );\\n        return PoseidonT3.poseidon(input);\\n    }\\n\\n    function poseidonT4(bytes32[3] memory input)\\n        internal\\n        pure\\n        returns (bytes32)\\n    {\\n        require(\\n            uint256(input[0]) < FIELD_SIZE &&\\n                uint256(input[1]) < FIELD_SIZE &&\\n                uint256(input[2]) < FIELD_SIZE,\\n            ERR_INPUT_NOT_IN_FIELD\\n        );\\n        return PoseidonT4.poseidon(input);\\n    }\\n\\n    function poseidonT5(bytes32[4] memory input)\\n        internal\\n        pure\\n        returns (bytes32)\\n    {\\n        require(\\n            uint256(input[0]) < FIELD_SIZE &&\\n                uint256(input[1]) < FIELD_SIZE &&\\n                uint256(input[2]) < FIELD_SIZE &&\\n                uint256(input[3]) < FIELD_SIZE,\\n            ERR_INPUT_NOT_IN_FIELD\\n        );\\n        return PoseidonT5.poseidon(input);\\n    }\\n\\n    function poseidonT6(bytes32[5] memory input)\\n        internal\\n        pure\\n        returns (bytes32)\\n    {\\n        require(\\n            uint256(input[0]) < FIELD_SIZE &&\\n                uint256(input[1]) < FIELD_SIZE &&\\n                uint256(input[2]) < FIELD_SIZE &&\\n                uint256(input[3]) < FIELD_SIZE &&\\n                uint256(input[4]) < FIELD_SIZE,\\n            ERR_INPUT_NOT_IN_FIELD\\n        );\\n        return PoseidonT6.poseidon(input);\\n    }\\n}\\n\",\"keccak256\":\"0xd1729091f690c784f4666c9ce46f8c6441c8b364645eb0dfe5d09a31ac9ed84f\",\"license\":\"MIT\"},\"contracts/protocol/crypto/SnarkConstants.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n// SPDX-FileCopyrightText: Copyright 2021-22 Panther Ventures Limited Gibraltar\\n// solhint-disable var-name-mixedcase\\npragma solidity ^0.8.16;\\n\\n// @dev Order of alt_bn128 and the field prime of Baby Jubjub and Poseidon hash\\nuint256 constant FIELD_SIZE = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\\n\\n// @dev Field prime of alt_bn128\\nuint256 constant PRIME_Q = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\\n\\n// FIXME: make MAGICAL_CONSTRAINT the public input (var, not const) - it MUST have random value on every invocation\\n// @dev Circuit extra public input as work-around for recently found groth16 vulnerability\\nuint256 constant MAGICAL_CONSTRAINT = 0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00;\\n\",\"keccak256\":\"0xc5545b99ebafdce4488581390f9466e1baf2ab9bb2107cb6614b34c101183de5\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/pantherForest/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n// SPDX-FileCopyrightText: Copyright 2021-23 Panther Ventures Limited Gibraltar\\npragma solidity ^0.8.16;\\n\\n// `PantherForest` tree leafs indices (leafs store specific merkle trees roots)\\nuint256 constant TAXI_TREE_FOREST_LEAF_INDEX = 0;\\nuint256 constant BUS_TREE_FOREST_LEAF_INDEX = 1;\\nuint256 constant FERRY_TREE_FOREST_LEAF_INDEX = 2;\\nuint256 constant STATIC_TREE_FOREST_LEAF_INDEX = 3;\\n\\n// `PantherStaticTree` leafs indices (leafs store specific merkle trees roots)\\nuint256 constant ZASSET_STATIC_LEAF_INDEX = 0;\\nuint256 constant ZACCOUNT_BLACKLIST_STATIC_LEAF_INDEX = 1;\\nuint256 constant ZNETWORK_STATIC_LEAF_INDEX = 2;\\nuint256 constant ZZONE_STATIC_LEAF_INDEX = 3;\\nuint256 constant PROVIDERS_KEYS_STATIC_LEAF_INDEX = 4;\\n\",\"keccak256\":\"0x418cf4af2f447d34f87043ba87b1c1901a79e4a15902fd9a26f0ee480d410674\",\"license\":\"BUSL-1.1\"},\"contracts/protocol/pantherForest/interfaces/ITreeRootGetter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SPDX-FileCopyrightText: Copyright 2023 Panther Ventures Limited Gibraltar\\npragma solidity ^0.8.16;\\n\\ninterface ITreeRootGetter {\\n    function getRoot() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xc6bb37fe4059cfe13c15f4c1d324b2de68a48348e136bf6cc72421f4721dc21d\",\"license\":\"MIT\"},\"contracts/protocol/pantherForest/interfaces/ITreeRootUpdater.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SPDX-FileCopyrightText: Copyright 2023 Panther Ventures Limited Gibraltar\\npragma solidity ^0.8.16;\\n\\ninterface ITreeRootUpdater {\\n    function updateRoot(bytes32 updatedLeaf, uint256 leafIndex) external;\\n}\\n\",\"keccak256\":\"0x4370b8a771095734709c5a2d7d920bc550beb91706364f2bdb8cb451cc539dbb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b5060405162000d9a38038062000d9a83398101604081905262000035916200018a565b866001600160a01b038116620000925760405162461bcd60e51b815260206004820152601a60248201527f496d6d4f776e3a207a65726f206f776e6572206164647265737300000000000060448201526064015b60405180910390fd5b6001600160a01b03908116608052851615801590620000b957506001600160a01b03841615155b8015620000ce57506001600160a01b03831615155b8015620000e357506001600160a01b03821615155b8015620000f857506001600160a01b03811615155b6200013b5760405162461bcd60e51b8152602060048201526012602482015271696e69743a207a65726f206164647265737360701b604482015260640162000089565b6001600160a01b0395861660a05293851660c05291841660e0528316610100528216610120521661014052506200021f565b80516001600160a01b03811681146200018557600080fd5b919050565b600080600080600080600060e0888a031215620001a657600080fd5b620001b1886200016d565b9650620001c1602089016200016d565b9550620001d1604089016200016d565b9450620001e1606089016200016d565b9350620001f1608089016200016d565b92506200020160a089016200016d565b91506200021160c089016200016d565b905092959891949750929550565b60805160a05160c05160e051610100516101205161014051610ae9620002b1600039600081816101f401526107de0152600081816101a601526107b301526000818161024c0152610788015260008181610225015261075d01526000818160e901526107320152600081816101cd015261051701526000818161012d015281816102a201526105c60152610ae96000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636c7330ad1161008c5780638cae2754116100665780638cae275414610220578063acbb8bf314610247578063c2e3e62b1461026e578063d12312491461028157600080fd5b80636c7330ad146101c85780637ca9a8b6146101ef5780638129fc1c1461021657600080fd5b80634bcd7322116100bd5780634bcd7322146101705780635ca1e1651461019957806369723fe4146101a157600080fd5b80630eb20a43146100e4578063117803e3146101285780633ff721ba1461014f575b600080fd5b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b61016261015d3660046109a7565b610289565b60405190815260200161011f565b61010b61017e3660046109c0565b6038602052600090815260409020546001600160a01b031681565b603254610162565b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b61021e6102a0565b005b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b61021e61027c3660046109ea565b610445565b61021e6105c4565b6033816005811061029957600080fd5b0154905081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461031d5760405162461bcd60e51b815260206004820152601460248201527f496d6d4f776e3a20756e617574686f72697a656400000000000000000000000060448201526064015b60405180910390fd5b6032541561036d5760405162461bcd60e51b815260206004820152601760248201527f50463a20416c726561647920696e697469616c697a65640000000000000000006044820152606401610314565b60005b60058160ff161015610409576103888160ff166106d8565b6001600160a01b0316635ca1e1656040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e99190610a0c565b60338260ff16600581106103ff576103ff610a25565b0155600101610370565b506040805160a08101918290526104409160339060059082845b815481526020019060010190808311610423575050505050610803565b603255565b61044e816106d8565b6001600160a01b0316336001600160a01b0316146104ae5760405162461bcd60e51b815260206004820152600c60248201527f756e617574686f72697a656400000000000000000000000000000000000000006044820152606401610314565b81603382600581106104c2576104c2610a25565b01556040805160a08101918290526033805482526104f492600590603460208501808311610423575050505050610803565b603281905560405163c2e3e62b60e01b81526004810191909152600360248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c2e3e62b90604401600060405180830381600087803b15801561056357600080fd5b505af1158015610577573d6000803e3d6000fd5b50505050807f66042f3a2aa2447638b4b91008bb67ce4bcb31954f19979f71c7238ad2175c7d836032546040516105b8929190918252602082015260400190565b60405180910390a25050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461063c5760405162461bcd60e51b815260206004820152601460248201527f496d6d4f776e3a20756e617574686f72697a65640000000000000000000000006044820152606401610314565b60005b60058160ff161015610409576106578160ff166106d8565b6001600160a01b0316635ca1e1656040518163ffffffff1660e01b8152600401602060405180830381865afa158015610694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b89190610a0c565b60338260ff16600581106106ce576106ce610a25565b015560010161063f565b60006005821061072a5760405162461bcd60e51b815260206004820152601460248201527f50463a20494e56414c49445f4c4541465f494e440000000000000000000000006044820152606401610314565b8161075257507f00000000000000000000000000000000000000000000000000000000000000005b6001820361077d57507f00000000000000000000000000000000000000000000000000000000000000005b600282036107a857507f00000000000000000000000000000000000000000000000000000000000000005b600382036107d357507f00000000000000000000000000000000000000000000000000000000000000005b600482036107fe57507f00000000000000000000000000000000000000000000000000000000000000005b919050565b600061080e82610814565b92915050565b80516000907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000111801561086a575060208201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001115b8015610899575060408201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001115b80156108c8575060608201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001115b80156108f7575060808201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001115b604051806060016040528060228152602001610abb602291399061092e5760405162461bcd60e51b81526004016103149190610a3b565b50604051633691146b60e11b815273DFBD1b0a49089D6ce523280fAdB49Bd14E37A3ED90636d2228d690610966908590600401610a89565b602060405180830381865af4158015610983573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e9190610a0c565b6000602082840312156109b957600080fd5b5035919050565b6000602082840312156109d257600080fd5b813560ff811681146109e357600080fd5b9392505050565b600080604083850312156109fd57600080fd5b50508035926020909101359150565b600060208284031215610a1e57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060208083528351808285015260005b81811015610a6857858101830151858201604001528201610a4c565b506000604082860101526040601f19601f8301168501019250505092915050565b60a08101818360005b6005811015610ab1578151835260209283019290910190600101610a92565b5050509291505056fe506f736569646f6e4861736865723a20696e707574206e6f7420696e206669656c64a164736f6c6343000810000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c80636c7330ad1161008c5780638cae2754116100665780638cae275414610220578063acbb8bf314610247578063c2e3e62b1461026e578063d12312491461028157600080fd5b80636c7330ad146101c85780637ca9a8b6146101ef5780638129fc1c1461021657600080fd5b80634bcd7322116100bd5780634bcd7322146101705780635ca1e1651461019957806369723fe4146101a157600080fd5b80630eb20a43146100e4578063117803e3146101285780633ff721ba1461014f575b600080fd5b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b61016261015d3660046109a7565b610289565b60405190815260200161011f565b61010b61017e3660046109c0565b6038602052600090815260409020546001600160a01b031681565b603254610162565b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b61021e6102a0565b005b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b61021e61027c3660046109ea565b610445565b61021e6105c4565b6033816005811061029957600080fd5b0154905081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461031d5760405162461bcd60e51b815260206004820152601460248201527f496d6d4f776e3a20756e617574686f72697a656400000000000000000000000060448201526064015b60405180910390fd5b6032541561036d5760405162461bcd60e51b815260206004820152601760248201527f50463a20416c726561647920696e697469616c697a65640000000000000000006044820152606401610314565b60005b60058160ff161015610409576103888160ff166106d8565b6001600160a01b0316635ca1e1656040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e99190610a0c565b60338260ff16600581106103ff576103ff610a25565b0155600101610370565b506040805160a08101918290526104409160339060059082845b815481526020019060010190808311610423575050505050610803565b603255565b61044e816106d8565b6001600160a01b0316336001600160a01b0316146104ae5760405162461bcd60e51b815260206004820152600c60248201527f756e617574686f72697a656400000000000000000000000000000000000000006044820152606401610314565b81603382600581106104c2576104c2610a25565b01556040805160a08101918290526033805482526104f492600590603460208501808311610423575050505050610803565b603281905560405163c2e3e62b60e01b81526004810191909152600360248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c2e3e62b90604401600060405180830381600087803b15801561056357600080fd5b505af1158015610577573d6000803e3d6000fd5b50505050807f66042f3a2aa2447638b4b91008bb67ce4bcb31954f19979f71c7238ad2175c7d836032546040516105b8929190918252602082015260400190565b60405180910390a25050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461063c5760405162461bcd60e51b815260206004820152601460248201527f496d6d4f776e3a20756e617574686f72697a65640000000000000000000000006044820152606401610314565b60005b60058160ff161015610409576106578160ff166106d8565b6001600160a01b0316635ca1e1656040518163ffffffff1660e01b8152600401602060405180830381865afa158015610694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b89190610a0c565b60338260ff16600581106106ce576106ce610a25565b015560010161063f565b60006005821061072a5760405162461bcd60e51b815260206004820152601460248201527f50463a20494e56414c49445f4c4541465f494e440000000000000000000000006044820152606401610314565b8161075257507f00000000000000000000000000000000000000000000000000000000000000005b6001820361077d57507f00000000000000000000000000000000000000000000000000000000000000005b600282036107a857507f00000000000000000000000000000000000000000000000000000000000000005b600382036107d357507f00000000000000000000000000000000000000000000000000000000000000005b600482036107fe57507f00000000000000000000000000000000000000000000000000000000000000005b919050565b600061080e82610814565b92915050565b80516000907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000111801561086a575060208201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001115b8015610899575060408201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001115b80156108c8575060608201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001115b80156108f7575060808201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001115b604051806060016040528060228152602001610abb602291399061092e5760405162461bcd60e51b81526004016103149190610a3b565b50604051633691146b60e11b815273__$f4ced4ad911a532f42104c201bc2409c3d$__90636d2228d690610966908590600401610a89565b602060405180830381865af4158015610983573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e9190610a0c565b6000602082840312156109b957600080fd5b5035919050565b6000602082840312156109d257600080fd5b813560ff811681146109e357600080fd5b9392505050565b600080604083850312156109fd57600080fd5b50508035926020909101359150565b600060208284031215610a1e57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060208083528351808285015260005b81811015610a6857858101830151858201604001528201610a4c565b506000604082860101526040601f19601f8301168501019250505092915050565b60a08101818360005b6005811015610ab1578151835260209283019290910190600101610a92565b5050509291505056fe506f736569646f6e4861736865723a20696e707574206e6f7420696e206669656c64a164736f6c6343000810000a",
  "libraries": {
    "PoseidonT6": "0xDFBD1b0a49089D6ce523280fAdB49Bd14E37A3ED"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "OWNER()": {
        "notice": "The owner who has privileged rights"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7635,
        "contract": "contracts/protocol/PantherStaticTree.sol:PantherStaticTree",
        "label": "_gap",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_bytes32)50_storage"
      },
      {
        "astId": 7652,
        "contract": "contracts/protocol/PantherStaticTree.sol:PantherStaticTree",
        "label": "_staticTreeRoot",
        "offset": 0,
        "slot": "50",
        "type": "t_bytes32"
      },
      {
        "astId": 7656,
        "contract": "contracts/protocol/PantherStaticTree.sol:PantherStaticTree",
        "label": "leafs",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_bytes32)5_storage"
      },
      {
        "astId": 7660,
        "contract": "contracts/protocol/PantherStaticTree.sol:PantherStaticTree",
        "label": "leafControllers",
        "offset": 0,
        "slot": "56",
        "type": "t_mapping(t_uint8,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)50_storage": {
        "base": "t_bytes32",
        "encoding": "inplace",
        "label": "bytes32[50]",
        "numberOfBytes": "1600"
      },
      "t_array(t_bytes32)5_storage": {
        "base": "t_bytes32",
        "encoding": "inplace",
        "label": "bytes32[5]",
        "numberOfBytes": "160"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint8,t_address)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}