{
  "address": "0x8a3679Db36cf0864848232e8b85eef928277A27f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OWNER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approveSpender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "claimedToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "claimErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd9530a1db7a4122425e57709a54fb5db6c6f6ff88e49a871f89bbff87dfb6ee4",
  "receipt": {
    "to": null,
    "from": "0x5FFfdD1dE35fFC2f66bFD78E064C280FeD9E68de",
    "contractAddress": "0x8a3679Db36cf0864848232e8b85eef928277A27f",
    "transactionIndex": 12,
    "gasUsed": "374624",
    "logsBloom": "0x
    "blockHash": "0xb3c1b06ca18ef4f6a4874779b883ee1be8113396264c0e557186148680ed26ae",
    "transactionHash": "0xd9530a1db7a4122425e57709a54fb5db6c6f6ff88e49a871f89bbff87dfb6ee4",
    "logs": [],
    "blockNumber": 7292655,
    "cumulativeGasUsed": "9172943",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FFfdD1dE35fFC2f66bFD78E064C280FeD9E68de",
    "0x9a27804316F7b31110E3823b68578A821D144bA0"
  ],
  "numDeployments": 1,
  "solcInputHash": "b8646c57e41aaeee81758989c8b63d63",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveSpender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Owner may alter ERC20 allowances and withdraw accidentally sent tokens.\",\"kind\":\"dev\",\"methods\":{\"approveSpender(address,uint256)\":{\"details\":\"May be only called by the {OWNER}\"},\"claimErc20(address,address,uint256)\":{\"details\":\"May be only called by the {OWNER}\"}},\"title\":\"RewardTreasury\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"OWNER()\":{\"notice\":\"The owner who has privileged rights\"},\"approveSpender(address,uint256)\":{\"notice\":\"It sets amount as ERC20 allowance over the {token} to the given spender\"},\"claimErc20(address,address,uint256)\":{\"notice\":\"Withdraws accidentally sent tokens from this contract\"},\"token()\":{\"notice\":\"Address of the Reward Pool token\"}},\"notice\":\"It keeps tokens of the \\\"Reward Pool\\\" and let authorized contracts spend them.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardTreasury.sol\":\"RewardTreasury\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/RewardTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n// SPDX-FileCopyrightText: Copyright 2021-22 Panther Ventures Limited Gibraltar\\n// solhint-disable var-name-mixedcase\\n// solhint-disable-next-line compiler-fixed, compiler-gt-0_8\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IErc20Min.sol\\\";\\nimport \\\"./interfaces/IErc20Approve.sol\\\";\\nimport \\\"./utils/ImmutableOwnable.sol\\\";\\nimport \\\"./utils/Claimable.sol\\\";\\nimport \\\"./utils/NonReentrant.sol\\\";\\n\\n/**\\n * @title RewardTreasury\\n * @notice It keeps tokens of the \\\"Reward Pool\\\" and let authorized contracts spend them.\\n * @dev The Owner may alter ERC20 allowances and withdraw accidentally sent tokens.\\n */\\ncontract RewardTreasury is ImmutableOwnable, NonReentrant, Claimable {\\n    /// @notice Address of the Reward Pool token\\n    address public immutable token;\\n\\n    constructor(address _owner, address _token) ImmutableOwnable(_owner) {\\n        require(_token != address(0), \\\"RT: E1\\\");\\n        token = _token;\\n    }\\n\\n    /// @notice It sets amount as ERC20 allowance over the {token} to the given spender\\n    /// @dev May be only called by the {OWNER}\\n    function approveSpender(address spender, uint256 amount)\\n        external\\n        onlyOwner\\n    {\\n        // call to the trusted contract - no reentrancy guard needed\\n        IErc20Approve(token).approve(spender, amount);\\n    }\\n\\n    /// @notice Withdraws accidentally sent tokens from this contract\\n    /// @dev May be only called by the {OWNER}\\n    function claimErc20(\\n        address claimedToken,\\n        address to,\\n        uint256 amount\\n    ) external onlyOwner nonReentrant {\\n        require(claimedToken != token, \\\"RT: prohibited\\\");\\n        _claimErc20(claimedToken, to, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x7a5e5238568c87d0e59e0d3f83dfa71fc82a581d622c96277c631c0ae5d7ce01\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IErc20Approve.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @dev Interface to call ERC-20 `approve` function\\ninterface IErc20Approve {\\n    /// @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n    // Beware of risk: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n    function approve(address spender, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x7e32669228911fadda3f22fa9bc7ba1c3d102b741882e793ab0271c6cd5462c1\",\"license\":\"MIT\"},\"contracts/interfaces/IErc20Min.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IErc20Min {\\n    /// @dev ERC-20 `balanceOf`\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /// @dev ERC-20 `transfer`\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /// @dev ERC-20 `transferFrom`\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /// @dev EIP-2612 `permit`\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x732db097fcf91d4e4bf49a43262f9268e02f6a7abb7583edfa861468c0541bf2\",\"license\":\"MIT\"},\"contracts/utils/Claimable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable-next-line compiler-fixed, compiler-gt-0_8\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Claimable\\n * @notice It withdraws accidentally sent tokens from this contract.\\n */\\ncontract Claimable {\\n    bytes4 private constant SELECTOR_TRANSFER =\\n        bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")));\\n\\n    /// @dev Withdraws ERC20 tokens from this contract\\n    /// (take care of reentrancy attack risk mitigation)\\n    function _claimErc20(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        // solhint-disable avoid-low-level-calls\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(SELECTOR_TRANSFER, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"claimErc20: TRANSFER_FAILED\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x702e63e7eef33ed5490abd4a58db7074a1bcf1b055057cbbbdbeaa4112f5c437\",\"license\":\"MIT\"},\"contracts/utils/ImmutableOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable-next-line compiler-fixed, compiler-gt-0_8\\npragma solidity ^0.8.0;\\n\\n/// @title Staking\\nabstract contract ImmutableOwnable {\\n    /// @notice The owner who has privileged rights\\n    // solhint-disable-next-line var-name-mixedcase\\n    address public immutable OWNER;\\n\\n    /// @dev Throws if called by any account other than the {OWNER}.\\n    modifier onlyOwner() {\\n        require(OWNER == msg.sender, \\\"ImmOwn: unauthorized\\\");\\n        _;\\n    }\\n\\n    constructor(address _owner) {\\n        require(_owner != address(0), \\\"ImmOwn: zero owner address\\\");\\n        OWNER = _owner;\\n    }\\n}\\n\",\"keccak256\":\"0xa7fcff1c9e37b9c757c39cf83b9149b440de47f72a1fb77426a75520fedead5c\",\"license\":\"MIT\"},\"contracts/utils/NonReentrant.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable-next-line compiler-fixed, compiler-gt-0_8\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title NonReentrant\\n * @notice It provides reentrancy guard.\\n * The code borrowed from openzeppelin-contracts.\\n * Unlike original, this version requires neither `constructor` no `init` call.\\n */\\nabstract contract NonReentrant {\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _reentrancyStatus;\\n\\n    modifier nonReentrant() {\\n        // Being called right after deployment, when _reentrancyStatus is 0 ,\\n        // it does not revert (which is expected behaviour)\\n        require(_reentrancyStatus != _ENTERED, \\\"claimErc20: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _reentrancyStatus = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _reentrancyStatus = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xbf71fedcb5a991cc9142ec5f8260ddfd30da2d17f0fe9171ea276901835a53fa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161074038038061074083398101604081905261002f9161010c565b816001600160a01b03811661008b5760405162461bcd60e51b815260206004820152601a60248201527f496d6d4f776e3a207a65726f206f776e6572206164647265737300000000000060448201526064015b60405180910390fd5b60601b6001600160601b0319166080526001600160a01b0381166100da5760405162461bcd60e51b815260206004820152600660248201526552543a20453160d01b6044820152606401610082565b60601b6001600160601b03191660a0525061013e565b80516001600160a01b038116811461010757600080fd5b919050565b6000806040838503121561011e578182fd5b610127836100f0565b9150610135602084016100f0565b90509250929050565b60805160601c60a05160601c6105be6101826000396000818160c10152818161018601526102dc015260008181606b0152818160e5015261020901526105be6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063080d7c4d14610051578063117803e31461006657806392a70fb0146100a9578063fc0c546a146100bc575b600080fd5b61006461005f366004610528565b6100e3565b005b61008d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100646100b73660046104ed565b610207565b61008d7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146101605760405162461bcd60e51b815260206004820152601460248201527f496d6d4f776e3a20756e617574686f72697a656400000000000000000000000060448201526064015b60405180910390fd5b60405163095ea7b360e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b1580156101ca57600080fd5b505af11580156101de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102029190610551565b505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461027f5760405162461bcd60e51b815260206004820152601460248201527f496d6d4f776e3a20756e617574686f72697a65640000000000000000000000006044820152606401610157565b600260005414156102d25760405162461bcd60e51b815260206004820152601a60248201527f636c61696d45726332303a207265656e7472616e742063616c6c0000000000006044820152606401610157565b60026000819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561035c5760405162461bcd60e51b815260206004820152600e60248201527f52543a2070726f686962697465640000000000000000000000000000000000006044820152606401610157565b610367838383610371565b5050600160005550565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052915160009283928716916104129190610578565b6000604051808303816000865af19150503d806000811461044f576040519150601f19603f3d011682016040523d82523d6000602084013e610454565b606091505b509150915081801561047e57508051158061047e57508080602001905181019061047e9190610551565b6104ca5760405162461bcd60e51b815260206004820152601b60248201527f636c61696d45726332303a205452414e534645525f4641494c454400000000006044820152606401610157565b5050505050565b80356001600160a01b03811681146104e857600080fd5b919050565b600080600060608486031215610501578283fd5b61050a846104d1565b9250610518602085016104d1565b9150604084013590509250925092565b6000806040838503121561053a578182fd5b610543836104d1565b946020939093013593505050565b600060208284031215610562578081fd5b81518015158114610571578182fd5b9392505050565b60008251815b81811015610598576020818601810151858301520161057e565b818111156105a65782828501525b50919091019291505056fea164736f6c6343000804000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063080d7c4d14610051578063117803e31461006657806392a70fb0146100a9578063fc0c546a146100bc575b600080fd5b61006461005f366004610528565b6100e3565b005b61008d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100646100b73660046104ed565b610207565b61008d7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146101605760405162461bcd60e51b815260206004820152601460248201527f496d6d4f776e3a20756e617574686f72697a656400000000000000000000000060448201526064015b60405180910390fd5b60405163095ea7b360e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b1580156101ca57600080fd5b505af11580156101de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102029190610551565b505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461027f5760405162461bcd60e51b815260206004820152601460248201527f496d6d4f776e3a20756e617574686f72697a65640000000000000000000000006044820152606401610157565b600260005414156102d25760405162461bcd60e51b815260206004820152601a60248201527f636c61696d45726332303a207265656e7472616e742063616c6c0000000000006044820152606401610157565b60026000819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561035c5760405162461bcd60e51b815260206004820152600e60248201527f52543a2070726f686962697465640000000000000000000000000000000000006044820152606401610157565b610367838383610371565b5050600160005550565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052915160009283928716916104129190610578565b6000604051808303816000865af19150503d806000811461044f576040519150601f19603f3d011682016040523d82523d6000602084013e610454565b606091505b509150915081801561047e57508051158061047e57508080602001905181019061047e9190610551565b6104ca5760405162461bcd60e51b815260206004820152601b60248201527f636c61696d45726332303a205452414e534645525f4641494c454400000000006044820152606401610157565b5050505050565b80356001600160a01b03811681146104e857600080fd5b919050565b600080600060608486031215610501578283fd5b61050a846104d1565b9250610518602085016104d1565b9150604084013590509250925092565b6000806040838503121561053a578182fd5b610543836104d1565b946020939093013593505050565b600060208284031215610562578081fd5b81518015158114610571578182fd5b9392505050565b60008251815b81811015610598576020818601810151858301520161057e565b818111156105a65782828501525b50919091019291505056fea164736f6c6343000804000a",
  "devdoc": {
    "details": "The Owner may alter ERC20 allowances and withdraw accidentally sent tokens.",
    "kind": "dev",
    "methods": {
      "approveSpender(address,uint256)": {
        "details": "May be only called by the {OWNER}"
      },
      "claimErc20(address,address,uint256)": {
        "details": "May be only called by the {OWNER}"
      }
    },
    "title": "RewardTreasury",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "OWNER()": {
        "notice": "The owner who has privileged rights"
      },
      "approveSpender(address,uint256)": {
        "notice": "It sets amount as ERC20 allowance over the {token} to the given spender"
      },
      "claimErc20(address,address,uint256)": {
        "notice": "Withdraws accidentally sent tokens from this contract"
      },
      "token()": {
        "notice": "Address of the Reward Pool token"
      }
    },
    "notice": "It keeps tokens of the \"Reward Pool\" and let authorized contracts spend them.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8585,
        "contract": "contracts/RewardTreasury.sol:RewardTreasury",
        "label": "_reentrancyStatus",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}