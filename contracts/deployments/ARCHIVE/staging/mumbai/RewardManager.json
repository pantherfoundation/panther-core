{
  "address": "0xa3a4a395DE94520e30e6FAdD263BB3DA434059f5",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ZKP",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUsers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rewards",
              "type": "uint256"
            }
          ],
          "internalType": "struct RewardManager.User[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rewards",
              "type": "uint256"
            }
          ],
          "internalType": "struct RewardManager.User[]",
          "name": "_users",
          "type": "tuple[]"
        }
      ],
      "name": "updateUsers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x48f5431bee96a8061af6ca12ffbc9aa024e06beffe0a3d626fe45ad3243e3269",
  "receipt": {
    "to": null,
    "from": "0xfB474a7FeCDaFBD412ebF0d60A0C32794F82d3dD",
    "contractAddress": "0xa3a4a395DE94520e30e6FAdD263BB3DA434059f5",
    "transactionIndex": 5,
    "gasUsed": "619412",
    "logsBloom": "0x
    "blockHash": "0x2c975611efca95de1596f01c26929e90f7d2ae393d5135422f9476b6055d8eed",
    "transactionHash": "0x48f5431bee96a8061af6ca12ffbc9aa024e06beffe0a3d626fe45ad3243e3269",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 44621604,
        "transactionHash": "0x48f5431bee96a8061af6ca12ffbc9aa024e06beffe0a3d626fe45ad3243e3269",
        "address": "0xa3a4a395DE94520e30e6FAdD263BB3DA434059f5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000fb474a7fecdafbd412ebf0d60a0c32794f82d3dd"
        ],
        "data": "0x",
        "logIndex": 25,
        "blockHash": "0x2c975611efca95de1596f01c26929e90f7d2ae393d5135422f9476b6055d8eed"
      },
      {
        "transactionIndex": 5,
        "blockNumber": 44621604,
        "transactionHash": "0x48f5431bee96a8061af6ca12ffbc9aa024e06beffe0a3d626fe45ad3243e3269",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000fb474a7fecdafbd412ebf0d60a0c32794f82d3dd",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000004fecf12920cc000000000000000000000000000000000000000000000000008e6b94373cc02e10000000000000000000000000000000000000000000023335bc1ba99f3a5efae00000000000000000000000000000000000000000000000008e1ba746139f6210000000000000000000000000000000000000000000023335bc6b9690637fc6e",
        "logIndex": 26,
        "blockHash": "0x2c975611efca95de1596f01c26929e90f7d2ae393d5135422f9476b6055d8eed"
      }
    ],
    "blockNumber": 44621604,
    "cumulativeGasUsed": "1266406",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "df748b3a5bbd79c59a0b7f1034107624",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZKP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUsers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"internalType\":\"struct RewardManager.User[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"internalType\":\"struct RewardManager.User[]\",\"name\":\"_users\",\"type\":\"tuple[]\"}],\"name\":\"updateUsers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardManager.sol\":\"RewardManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/RewardManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n// SPDX-FileCopyrightText: Copyright 2021-25 Panther Protocol Foundation\\npragma solidity 0.8.16;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract RewardManager is Ownable {\\n    address public constant ZKP = 0x4004C49aBb96B11D89A52DeCCa2D1522da7f3089;\\n\\n    struct User {\\n        address user;\\n        uint256 rewards;\\n    }\\n\\n    User[] public users;\\n\\n    function updateUsers(User[] memory _users) external onlyOwner {\\n        for (uint i = 0; i < _users.length; i++) {\\n            users.push(_users[i]);\\n        }\\n    }\\n\\n    function getUsers() external view returns (User[] memory) {\\n        return users;\\n    }\\n\\n    function distribute() external onlyOwner {\\n        for (uint i = 0; i < users.length; i++) {\\n            IERC20(ZKP).transfer(users[i].user, users[i].rewards);\\n        }\\n    }\\n\\n    function withdraw(address _token, uint256 _amount) external onlyOwner {\\n        IERC20(_token).transfer(owner(), _amount);\\n    }\\n}\\n\",\"keccak256\":\"0xd618d071d53162d08280b533300b982f6326a3a5cbdc103015b0815e14a7754a\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109cd8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a25760003560e01c80638da5cb5b11610076578063e4fc6b6d1161005b578063e4fc6b6d14610154578063f2fde38b1461015c578063f3fef3a31461016f57600080fd5b80638da5cb5b1461011457806399a9b5891461013957600080fd5b8062ce8e3e146100a7578063217c5690146100c5578063365b98b2146100da578063715018a61461010c575b600080fd5b6100af610182565b6040516100bc9190610744565b60405180910390f35b6100d86100d3366004610828565b6101f7565b005b6100ed6100e83660046108fc565b6102e2565b604080516001600160a01b0390931683526020830191909152016100bc565b6100d861031a565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100bc565b610121734004c49abb96b11d89a52decca2d1522da7f308981565b6100d8610380565b6100d861016a366004610915565b6104ff565b6100d861017d366004610937565b6105de565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156101ee576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001908101548284015290835290920191016101a6565b50505050905090565b6000546001600160a01b031633146102565760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60005b81518110156102de57600182828151811061027657610276610961565b6020908102919091018101518254600180820185556000948552938390208251600290920201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091178155910151910155806102d681610977565b915050610259565b5050565b600181815481106102f257600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6000546001600160a01b031633146103745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024d565b61037e60006106e7565b565b6000546001600160a01b031633146103da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024d565b60005b6001548110156104fc57734004c49abb96b11d89a52decca2d1522da7f30896001600160a01b031663a9059cbb6001838154811061041d5761041d610961565b6000918252602090912060029091020154600180546001600160a01b03909216918590811061044e5761044e610961565b60009182526020909120600160029092020101546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e9919061099e565b50806104f481610977565b9150506103dd565b50565b6000546001600160a01b031633146105595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024d565b6001600160a01b0381166105d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161024d565b6104fc816106e7565b6000546001600160a01b031633146106385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024d565b816001600160a01b031663a9059cbb6106596000546001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156106be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e2919061099e565b505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b602080825282518282018190526000919060409081850190868401855b8281101561078f57815180516001600160a01b03168552860151868501529284019290850190600101610761565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156107d5576107d561079c565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108045761080461079c565b604052919050565b80356001600160a01b038116811461082357600080fd5b919050565b6000602080838503121561083b57600080fd5b823567ffffffffffffffff8082111561085357600080fd5b818501915085601f83011261086757600080fd5b8135818111156108795761087961079c565b610887848260051b016107db565b818152848101925060069190911b8301840190878211156108a757600080fd5b928401925b818410156108f157604084890312156108c55760008081fd5b6108cd6107b2565b6108d68561080c565b815284860135868201528352604090930192918401916108ac565b979650505050505050565b60006020828403121561090e57600080fd5b5035919050565b60006020828403121561092757600080fd5b6109308261080c565b9392505050565b6000806040838503121561094a57600080fd5b6109538361080c565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161099757634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156109b057600080fd5b8151801515811461093057600080fdfea164736f6c6343000810000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a25760003560e01c80638da5cb5b11610076578063e4fc6b6d1161005b578063e4fc6b6d14610154578063f2fde38b1461015c578063f3fef3a31461016f57600080fd5b80638da5cb5b1461011457806399a9b5891461013957600080fd5b8062ce8e3e146100a7578063217c5690146100c5578063365b98b2146100da578063715018a61461010c575b600080fd5b6100af610182565b6040516100bc9190610744565b60405180910390f35b6100d86100d3366004610828565b6101f7565b005b6100ed6100e83660046108fc565b6102e2565b604080516001600160a01b0390931683526020830191909152016100bc565b6100d861031a565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100bc565b610121734004c49abb96b11d89a52decca2d1522da7f308981565b6100d8610380565b6100d861016a366004610915565b6104ff565b6100d861017d366004610937565b6105de565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156101ee576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001908101548284015290835290920191016101a6565b50505050905090565b6000546001600160a01b031633146102565760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60005b81518110156102de57600182828151811061027657610276610961565b6020908102919091018101518254600180820185556000948552938390208251600290920201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091178155910151910155806102d681610977565b915050610259565b5050565b600181815481106102f257600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6000546001600160a01b031633146103745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024d565b61037e60006106e7565b565b6000546001600160a01b031633146103da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024d565b60005b6001548110156104fc57734004c49abb96b11d89a52decca2d1522da7f30896001600160a01b031663a9059cbb6001838154811061041d5761041d610961565b6000918252602090912060029091020154600180546001600160a01b03909216918590811061044e5761044e610961565b60009182526020909120600160029092020101546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e9919061099e565b50806104f481610977565b9150506103dd565b50565b6000546001600160a01b031633146105595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024d565b6001600160a01b0381166105d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161024d565b6104fc816106e7565b6000546001600160a01b031633146106385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024d565b816001600160a01b031663a9059cbb6106596000546001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156106be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e2919061099e565b505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b602080825282518282018190526000919060409081850190868401855b8281101561078f57815180516001600160a01b03168552860151868501529284019290850190600101610761565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156107d5576107d561079c565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108045761080461079c565b604052919050565b80356001600160a01b038116811461082357600080fd5b919050565b6000602080838503121561083b57600080fd5b823567ffffffffffffffff8082111561085357600080fd5b818501915085601f83011261086757600080fd5b8135818111156108795761087961079c565b610887848260051b016107db565b818152848101925060069190911b8301840190878211156108a757600080fd5b928401925b818410156108f157604084890312156108c55760008081fd5b6108cd6107b2565b6108d68561080c565b815284860135868201528352604090930192918401916108ac565b979650505050505050565b60006020828403121561090e57600080fd5b5035919050565b60006020828403121561092757600080fd5b6109308261080c565b9392505050565b6000806040838503121561094a57600080fd5b6109538361080c565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161099757634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156109b057600080fd5b8151801515811461093057600080fdfea164736f6c6343000810000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/RewardManager.sol:RewardManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1628,
        "contract": "contracts/RewardManager.sol:RewardManager",
        "label": "users",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(User)1624_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(User)1624_storage)dyn_storage": {
        "base": "t_struct(User)1624_storage",
        "encoding": "dynamic_array",
        "label": "struct RewardManager.User[]",
        "numberOfBytes": "32"
      },
      "t_struct(User)1624_storage": {
        "encoding": "inplace",
        "label": "struct RewardManager.User",
        "members": [
          {
            "astId": 1621,
            "contract": "contracts/RewardManager.sol:RewardManager",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1623,
            "contract": "contracts/RewardManager.sol:RewardManager",
            "label": "rewards",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}