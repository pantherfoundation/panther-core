@startuml
'https://plantuml.com/sequence-diagram

title **Advanced staking**

'autonumber

<style>
</style>

hide footbox
actor "Staker" as staker

box "Smart Contracts on Polygon"
  database "Staking\n" as Staking
  database "RewardMaster\n" as rMaster
  database "AdvancedStakeController\n" as aSCtrl
  database "MASP\n" as MASP
  database "RewardTreasury\n" as rTreasury
  database "$ZKP\nToken" as PZKP
end box

staker -> Staking ++ : ""stake(...,""\n\t""zZKPspendPubKey, zZKPcipherText,""\n\t""PRPspendPubKey, PRPcipherText)""
  Staking -> Staking ++ : ""_createStake()""
    Staking -> PZKP ++ : ""transferFrom(staker, Staking, stakedAmount)""
      staker --> Staking : ""stakedAmount""
    deactivate
    opt ""if (_terms.isRewarded)""
      Staking -> Staking ++ : ""_sendStakedMsg()""
        'Staking -> SMP: _encodeStakeActionType()
        'return
        Staking -> rMaster ++ : ""onAction()""
          rMaster -> aSCtrl ++ : ""getRewardAdvice()""
            aSCtrl -> aSCtrl ++-- : ""checkAmount()""
            aSCtrl -> PZKP ++ : ""transferFrom(treasury, MASP, rewardAmount)""
              rTreasury --> MASP : ""rewardAmount""
            deactivate
            aSCtrl -> MASP ++ : ""depositFor(""\n\t""zZKPspendPubKey,""\n\t""zZKPcipherText,""\n\t""PRPspendPubKey,""\n\t""PRPcipherText)""
              'MASP -> MASP ++-- : ""deposit()""
              note over MASP
                Generates zZKP and PRP
                UTXOs; inserts leaves
                into tree; emits ciphertext.
              end note
            return
          return ""Advice""
        deactivate
      deactivate
    deactivate
  deactivate
  staker --> MASP : check events emitted
end
@enduml
