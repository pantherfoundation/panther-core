default:
  image: node:20

.yarn_cache_template: &yarn_cache_template
  key:
    files:
      - package.json
      - yarn.lock
  paths:
    - .cache_exists
    - .yarn-cache/
    - node_modules/
    - circuits/node_modules/
    - contracts/node_modules/
    - crypto/node_modules/
    - dapp/node_modules/
    - subgraph/node_modules/
  policy: pull

.base_scripts: &base_scripts
  - time yarn danger ci
  - echo "${CI_COMMIT_MESSAGE}" | yarn commitlint
  - time yarn lint
  - time yarn build:types
  - time yarn test:ci

.build_then_deploy_staging_internal: &build_then_deploy_staging_internal
  - cp dapp/.env.staging.internal dapp/.env
  - time yarn run build:dapp:staging:internal
  - time yarn deploy:dapp:ci:ipfs

.build_then_deploy_canary_public: &build_then_deploy_canary_public
  - cp dapp/.env.canary.public dapp/.env
  - time yarn run build:dapp:canary:public
  - time yarn deploy:dapp:ci:ipfs --canary

.combined_job_template:
  cache:
    <<: *yarn_cache_template
    policy: pull
  before_script:
    - time yarn install --frozen-lockfile --check-files --cache-folder .yarn-cache

.ipfs_deploy_script: &ipfs_deploy_script
  - time yarn deploy:dapp:ci:ipfs

job-on-MR:
  extends: .combined_job_template
  rules:
    - if: $CI_COMMIT_TITLE !~ /^Merge branch/ && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
  interruptible: true
  script:
    - *base_scripts
    - *build_then_deploy_staging_internal
    - *build_then_deploy_canary_public
  artifacts:
    when: always
    reports:
      junit:
        - dapp/junit.xml
  timeout: 30m

.ipfs_unpin_script: &ipfs_unpin_script
  - time yarn deploy:dapp:ci:ipfs --unpin

job-on-merge:
  extends: .combined_job_template
  rules:
    - if: $CI_COMMIT_TITLE =~ /^Merge branch/
      when: always
  script:
    - *base_scripts
    - *ipfs_unpin_script
  artifacts:
    when: always
    reports:
      junit:
        - dapp/junit.xml
  timeout: 30m

build-cache:
  interruptible: true
  rules:
    - if: $CI_COMMIT_TITLE !~ /^Merge branch/ && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
  cache:
    <<: *yarn_cache_template
    policy: pull-push
  script:
    - |
      if [[ -d node_modules ]]; then
        echo "Cache already exists"
        exit 10
      fi
    - time yarn install --frozen-lockfile --check-files --cache-folder .yarn-cache
  allow_failure:
    exit_codes: 10
  timeout: 30m

circom-test:
  image: node:18-bullseye
  stage: test
  rules:
    - if: $CI_COMMIT_TITLE !~ /^Merge branch/ && $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - circuits/**/*
  before_script:
    - apt-get update && apt-get install -y curl git build-essential
    - npm install -g typescript
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - source ~/.profile
    - cargo --version
    - git clone --branch v2.1.9 https://github.com/iden3/circom.git
    - cd circom && cargo build --release
    - cargo install --path circom
    - circom --version

  script:
    - cd .. && cd crypto/ && yarn && yarn build
    - cd ../circuits/test
    - rm -rf lib/*
    - yarn && yarn install
    - yarn test
  timeout: 30m
